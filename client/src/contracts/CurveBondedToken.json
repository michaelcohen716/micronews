{
  "contractName": "CurveBondedToken",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "reserveRatio",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "sender",
          "type": "address"
        },
        {
          "name": "recipient",
          "type": "address"
        },
        {
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_supply",
          "type": "uint256"
        },
        {
          "name": "_connectorBalance",
          "type": "uint256"
        },
        {
          "name": "_connectorWeight",
          "type": "uint32"
        },
        {
          "name": "_depositAmount",
          "type": "uint256"
        }
      ],
      "name": "calculatePurchaseReturn",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_supply",
          "type": "uint256"
        },
        {
          "name": "_connectorBalance",
          "type": "uint256"
        },
        {
          "name": "_connectorWeight",
          "type": "uint32"
        },
        {
          "name": "_sellAmount",
          "type": "uint256"
        }
      ],
      "name": "calculateSaleReturn",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "poolBalance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "recipient",
          "type": "address"
        },
        {
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "scale",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_reserveRatio",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "deposit",
          "type": "uint256"
        }
      ],
      "name": "CurvedMint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "reimbursement",
          "type": "uint256"
        }
      ],
      "name": "CurvedBurn",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "calculateCurvedMintReturn",
      "outputs": [
        {
          "name": "mintAmount",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "calculateCurvedBurnReturn",
      "outputs": [
        {
          "name": "burnAmount",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": "0x60806040526040805190810160405280600381526020017f302e330000000000000000000000000000000000000000000000000000000000815250600090805190602001906200005192919062001417565b50600180556020600260006101000a81548160ff021916908360ff160217905550607f600260016101000a81548160ff021916908360ff1602179055506f800000000000000000000000000000006003557002000000000000000000000000000000006004556f03f80fe03f80fe03f80fe03f80fe03f86005556f05b9de1d10bf4103d647b0955897ba8060065570015bf0a8b1457695355fb8ac404e7a79e36007557008000000000000000000000000000000006008556040805190810160405280600381526020017f302e330000000000000000000000000000000000000000000000000000000000815250608990805190602001906200015692919062001417565b50620f4240608a60006101000a81548163ffffffff021916908363ffffffff160217905550670de0b6b3a7640000608e55608e54600102608f553480156200019d57600080fd5b506040516020806200419283398101806040526020811015620001bf57600080fd5b8101908080519060200190929190505050701c35fedd14ffffffffffffffffffffffff60096020608081101515620001f357fe5b0181905550701b0ce43b323fffffffffffffffffffffff600960216080811015156200021b57fe5b01819055507019f0028ec1ffffffffffffffffffffffff600960226080811015156200024357fe5b01819055507018ded91f0e7fffffffffffffffffffffff600960236080811015156200026b57fe5b01819055507017d8ec7f0417ffffffffffffffffffffff600960246080811015156200029357fe5b01819055507016ddc6556cdbffffffffffffffffffffff60096025608081101515620002bb57fe5b01819055507015ecf52776a1ffffffffffffffffffffff60096026608081101515620002e357fe5b01819055507015060c256cb2ffffffffffffffffffffff600960276080811015156200030b57fe5b0181905550701428a2f98d72ffffffffffffffffffffff600960286080811015156200033357fe5b01819055507013545598e5c23fffffffffffffffffffff600960296080811015156200035b57fe5b0181905550701288c4161ce1dfffffffffffffffffffff6009602a6080811015156200038357fe5b01819055507011c592761c666fffffffffffffffffffff6009602b608081101515620003ab57fe5b018190555070110a688680a757ffffffffffffffffffff6009602c608081101515620003d357fe5b0181905550701056f1b5bedf77ffffffffffffffffffff6009602d608081101515620003fb57fe5b0181905550700faadceceeff8bffffffffffffffffffff6009602e6080811015156200042357fe5b0181905550700f05dc6b27edadffffffffffffffffffff6009602f6080811015156200044b57fe5b0181905550700e67a5a25da4107fffffffffffffffffff600960306080811015156200047357fe5b0181905550700dcff115b14eedffffffffffffffffffff600960316080811015156200049b57fe5b0181905550700d3e7a392431239fffffffffffffffffff60096032608081101515620004c357fe5b0181905550700cb2ff529eb71e4fffffffffffffffffff60096033608081101515620004eb57fe5b0181905550700c2d415c3db974afffffffffffffffffff600960346080811015156200051357fe5b0181905550700bad03e7d883f69bffffffffffffffffff600960356080811015156200053b57fe5b0181905550700b320d03b2c343d5ffffffffffffffffff600960366080811015156200056357fe5b0181905550700abc25204e02828dffffffffffffffffff600960376080811015156200058b57fe5b0181905550700a4b16f74ee4bb207fffffffffffffffff60096038608081101515620005b357fe5b01819055507009deaf736ac1f569ffffffffffffffffff60096039608081101515620005db57fe5b0181905550700976bd9952c7aa957fffffffffffffffff6009603a6080811015156200060357fe5b01819055507009131271922eaa606fffffffffffffffff6009603b6080811015156200062b57fe5b01819055507008b380f3558668c46fffffffffffffffff6009603c6080811015156200065357fe5b0181905550700857ddf0117efa215bffffffffffffffff6009603d6080811015156200067b57fe5b01819055507007ffffffffffffffffffffffffffffffff6009603e608081101515620006a357fe5b01819055507007abbf6f6abb9d087fffffffffffffffff6009603f608081101515620006cb57fe5b018190555070075af62cbac95f7dfa7fffffffffffffff60096040608081101515620006f357fe5b018190555070070d7fb7452e187ac13fffffffffffffff600960416080811015156200071b57fe5b01819055507006c3390ecc8af379295fffffffffffffff600960426080811015156200074357fe5b018190555070067c00a3b07ffc01fd6fffffffffffffff600960436080811015156200076b57fe5b0181905550700637b647c39cbb9d3d27ffffffffffffff600960446080811015156200079357fe5b01819055507005f63b1fc104dbd39587ffffffffffffff60096045608081101515620007bb57fe5b01819055507005b771955b36e12f7235ffffffffffffff60096046608081101515620007e357fe5b018190555070057b3d49dda84556d6f6ffffffffffffff600960476080811015156200080b57fe5b018190555070054183095b2c8ececf30ffffffffffffff600960486080811015156200083357fe5b018190555070050a28be635ca2b888f77fffffffffffff600960496080811015156200085b57fe5b01819055507004d5156639708c9db33c3fffffffffffff6009604a6080811015156200088357fe5b01819055507004a23105873875bd52dfdfffffffffffff6009604b608081101515620008ab57fe5b0181905550700471649d87199aa990756fffffffffffff6009604c608081101515620008d357fe5b01819055507004429a21a029d4c1457cfbffffffffffff6009604d608081101515620008fb57fe5b0181905550700415bc6d6fb7dd71af2cb3ffffffffffff6009604e6080811015156200092357fe5b01819055507003eab73b3bbfe282243ce1ffffffffffff6009604f6080811015156200094b57fe5b01819055507003c1771ac9fb6b4c18e229ffffffffffff600960506080811015156200097357fe5b0181905550700399e96897690418f785257fffffffffff600960516080811015156200099b57fe5b0181905550700373fc456c53bb779bf0ea9fffffffffff60096052608081101515620009c357fe5b018190555070034f9e8e490c48e67e6ab8bfffffffffff60096053608081101515620009eb57fe5b018190555070032cbfd4a7adc790560b3337ffffffffff6009605460808110151562000a1357fe5b018190555070030b50570f6e5d2acca94613ffffffffff6009605560808110151562000a3b57fe5b01819055507002eb40f9f620fda6b56c2861ffffffffff6009605660808110151562000a6357fe5b01819055507002cc8340ecb0d0f520a6af58ffffffffff6009605760808110151562000a8b57fe5b01819055507002af09481380a0a35cf1ba02ffffffffff6009605860808110151562000ab357fe5b0181905550700292c5bdd3b92ec810287b1b3fffffffff6009605960808110151562000adb57fe5b0181905550700277abdcdab07d5a77ac6d6b9fffffffff6009605a60808110151562000b0357fe5b018190555070025daf6654b1eaa55fd64df5efffffffff6009605b60808110151562000b2b57fe5b0181905550700244c49c648baa98192dce88b7ffffffff6009605c60808110151562000b5357fe5b018190555070022ce03cd5619a311b2471268bffffffff6009605d60808110151562000b7b57fe5b0181905550700215f77c045fbe885654a44a0fffffffff6009605e60808110151562000ba357fe5b01819055507001ffffffffffffffffffffffffffffffff6009605f60808110151562000bcb57fe5b01819055507001eaefdbdaaee7421fc4d3ede5ffffffff6009606060808110151562000bf357fe5b01819055507001d6bd8b2eb257df7e8ca57b09bfffffff6009606160808110151562000c1b57fe5b01819055507001c35fedd14b861eb0443f7f133fffffff6009606260808110151562000c4357fe5b01819055507001b0ce43b322bcde4a56e8ada5afffffff6009606360808110151562000c6b57fe5b018190555070019f0028ec1fff007f5a195a39dfffffff6009606460808110151562000c9357fe5b018190555070018ded91f0e72ee74f49b15ba527ffffff6009606560808110151562000cbb57fe5b018190555070017d8ec7f04136f4e5615fd41a63ffffff6009606660808110151562000ce357fe5b018190555070016ddc6556cdb84bdc8d12d22e6fffffff6009606760808110151562000d0b57fe5b018190555070015ecf52776a1155b5bd8395814f7fffff6009606860808110151562000d3357fe5b018190555070015060c256cb23b3b3cc3754cf40ffffff6009606960808110151562000d5b57fe5b01819055507001428a2f98d728ae223ddab715be3fffff6009606a60808110151562000d8357fe5b018190555070013545598e5c23276ccf0ede68034fffff6009606b60808110151562000dab57fe5b01819055507001288c4161ce1d6f54b7f61081194fffff6009606c60808110151562000dd357fe5b018190555070011c592761c666aa641d5a01a40f17ffff6009606d60808110151562000dfb57fe5b0181905550700110a688680a7530515f3e6e6cfdcdffff6009606e60808110151562000e2357fe5b01819055507001056f1b5bedf75c6bcb2ce8aed428ffff6009606f60808110151562000e4b57fe5b01819055506ffaadceceeff8a0890f3875f008277fff6009607060808110151562000e7257fe5b01819055506ff05dc6b27edad306388a600f6ba0bfff6009607160808110151562000e9957fe5b01819055506fe67a5a25da41063de1495d5b18cdbfff6009607260808110151562000ec057fe5b01819055506fdcff115b14eedde6fc3aa5353f2e4fff6009607360808110151562000ee757fe5b01819055506fd3e7a3924312399f9aae2e0f868f8fff6009607460808110151562000f0e57fe5b01819055506fcb2ff529eb71e41582cccd5a1ee26fff6009607560808110151562000f3557fe5b01819055506fc2d415c3db974ab32a51840c0b67edff6009607660808110151562000f5c57fe5b01819055506fbad03e7d883f69ad5b0a186184e06bff6009607760808110151562000f8357fe5b01819055506fb320d03b2c343d4829abd6075f0cc5ff6009607860808110151562000faa57fe5b01819055506fabc25204e02828d73c6e80bcdb1a95bf6009607960808110151562000fd157fe5b01819055506fa4b16f74ee4bb2040a1ec6c15fbbf2df6009607a60808110151562000ff857fe5b01819055506f9deaf736ac1f569deb1b5ae3f36c130f6009607b6080811015156200101f57fe5b01819055506f976bd9952c7aa957f5937d790ef650376009607c6080811015156200104657fe5b01819055506f9131271922eaa6064b73a22d0bd4f2bf6009607d6080811015156200106d57fe5b01819055506f8b380f3558668c46c91c49a2f8e967b96009607e6080811015156200109457fe5b01819055506f857ddf0117efa215952912839f6473e66009607f608081101515620010bb57fe5b018190555033608a60046101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550608a60049054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380609081905550620011a533608e54600102620011ac640100000000026401000000009004565b50620014c6565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151562001252576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f45524332303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b6200127781608d546200138c6401000000000262001873179091906401000000009004565b608d81905550620012df81608b60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546200138c6401000000000262001873179091906401000000009004565b608b60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b60008082840190508381101515156200140d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200145a57805160ff19168380011785556200148b565b828001600101855582156200148b579182015b828111156200148a5782518255916020019190600101906200146d565b5b5090506200149a91906200149e565b5090565b620014c391905b80821115620014bf576000816000905550600101620014a5565b5090565b90565b612cbc80620014d66000396000f3fe608060405260043610610112576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063095ea7b3146101175780630c7d5cd81461018a57806318160ddd146101b557806323b872dd146101e057806329a00e7c1461027357806339509351146102e657806349f9b0f71461035957806354fd4d50146103cc5780636d6f1e011461045c57806370a08231146104ab578063715018a6146105105780638da5cb5b146105275780638f32d59b1461057e57806396365d44146105ad5780639a4f318b146105d8578063a457c2d714610627578063a9059cbb1461069a578063dd62ed3e1461070d578063f2fde38b14610792578063f51e181a146107e3575b600080fd5b34801561012357600080fd5b506101706004803603604081101561013a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061080e565b604051808215151515815260200191505060405180910390f35b34801561019657600080fd5b5061019f610825565b6040518082815260200191505060405180910390f35b3480156101c157600080fd5b506101ca61082b565b6040518082815260200191505060405180910390f35b3480156101ec57600080fd5b506102596004803603606081101561020357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610835565b604051808215151515815260200191505060405180910390f35b34801561027f57600080fd5b506102d06004803603608081101561029657600080fd5b810190808035906020019092919080359060200190929190803563ffffffff169060200190929190803590602001909291905050506108e6565b6040518082815260200191505060405180910390f35b3480156102f257600080fd5b5061033f6004803603604081101561030957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610a19565b604051808215151515815260200191505060405180910390f35b34801561036557600080fd5b506103b66004803603608081101561037c57600080fd5b810190808035906020019092919080359060200190929190803563ffffffff16906020019092919080359060200190929190505050610abe565b6040518082815260200191505060405180910390f35b3480156103d857600080fd5b506103e1610c20565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610421578082015181840152602081019050610406565b50505050905090810190601f16801561044e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561046857600080fd5b506104956004803603602081101561047f57600080fd5b8101908080359060200190929190505050610cbe565b6040518082815260200191505060405180910390f35b3480156104b757600080fd5b506104fa600480360360208110156104ce57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610cde565b6040518082815260200191505060405180910390f35b34801561051c57600080fd5b50610525610d27565b005b34801561053357600080fd5b5061053c610e64565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561058a57600080fd5b50610593610e8e565b604051808215151515815260200191505060405180910390f35b3480156105b957600080fd5b506105c2610ee6565b6040518082815260200191505060405180910390f35b3480156105e457600080fd5b50610611600480360360208110156105fb57600080fd5b8101908080359060200190929190505050610eec565b6040518082815260200191505060405180910390f35b34801561063357600080fd5b506106806004803603604081101561064a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610f0c565b604051808215151515815260200191505060405180910390f35b3480156106a657600080fd5b506106f3600480360360408110156106bd57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610fb1565b604051808215151515815260200191505060405180910390f35b34801561071957600080fd5b5061077c6004803603604081101561073057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610fc8565b6040518082815260200191505060405180910390f35b34801561079e57600080fd5b506107e1600480360360208110156107b557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061104f565b005b3480156107ef57600080fd5b506107f86110d7565b6040518082815260200191505060405180910390f35b600061081b3384846110dd565b6001905092915050565b60905481565b6000608d54905090565b600061084284848461135e565b6108db84336108d685608c60008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461168890919063ffffffff16565b6110dd565b600190509392505050565b600080851180156108f75750600084115b8015610909575060008363ffffffff16115b80156109335750608a60009054906101000a900463ffffffff1663ffffffff168363ffffffff1611155b151561093e57600080fd5b60008214156109505760009050610a11565b608a60009054906101000a900463ffffffff1663ffffffff168363ffffffff1614156109a25761099b8461098d848861171390919063ffffffff16565b6117e090919063ffffffff16565b9050610a11565b60008060006109ba878661187390919063ffffffff16565b90506109da818888608a60009054906101000a900463ffffffff166118fd565b809350819450505060008260ff166109fb858b61171390919063ffffffff16565b908060020a820491505090508881039450505050505b949350505050565b6000610ab43384610aaf85608c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461187390919063ffffffff16565b6110dd565b6001905092915050565b60008085118015610acf5750600084115b8015610ae1575060008363ffffffff16115b8015610b0b5750608a60009054906101000a900463ffffffff1663ffffffff168363ffffffff1611155b8015610b175750848211155b1515610b2257600080fd5b6000821415610b345760009050610c18565b84821415610b4457839050610c18565b608a60009054906101000a900463ffffffff1663ffffffff168363ffffffff161415610b9657610b8f85610b81848761171390919063ffffffff16565b6117e090919063ffffffff16565b9050610c18565b60008060008488039050610bbe8882608a60009054906101000a900463ffffffff16896118fd565b80935081945050506000610bdb848961171390919063ffffffff16565b905060008360ff16899060020a029050610c1085610c02838561168890919063ffffffff16565b6117e090919063ffffffff16565b955050505050505b949350505050565b60898054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610cb65780601f10610c8b57610100808354040283529160200191610cb6565b820191906000526020600020905b815481529060010190602001808311610c9957829003601f168201915b505050505081565b6000610cd7610ccb61082b565b608f5460905485610abe565b9050919050565b6000608b60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610d2f610e8e565b1515610da3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16608a60049054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000608a60046101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000608a60049054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000608a60049054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b608f5481565b6000610f05610ef961082b565b608f54609054856108e6565b9050919050565b6000610fa73384610fa285608c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461168890919063ffffffff16565b6110dd565b6001905092915050565b6000610fbe33848461135e565b6001905092915050565b6000608c60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b611057610e8e565b15156110cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6110d481611a56565b50565b608e5481565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141515156111a8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001807f45524332303a20617070726f76652066726f6d20746865207a65726f2061646481526020017f726573730000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515611273576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001807f45524332303a20617070726f766520746f20746865207a65726f20616464726581526020017f737300000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b80608c60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515611429576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001807f45524332303a207472616e736665722066726f6d20746865207a65726f20616481526020017f647265737300000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156114f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001807f45524332303a207472616e7366657220746f20746865207a65726f206164647281526020017f657373000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b61154681608b60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461168890919063ffffffff16565b608b60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506115db81608b60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461187390919063ffffffff16565b608b60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000828211151515611702576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b600082840390508091505092915050565b60008083141561172657600090506117da565b6000828402905082848281151561173957fe5b041415156117d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001807f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f81526020017f770000000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b809150505b92915050565b60008082111515611859576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525060200191505060405180910390fd5b6000828481151561186657fe5b0490508091505092915050565b60008082840190508381101515156118f3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b6000806004548610151561190d57fe5b848610151515611985576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f4261736573203c203120617265206e6f7420737570706f727465642e0000000081525060200191505060405180910390fd5b60008086600354890281151561199757fe5b0490506007548110156119b4576119ad81611be1565b91506119c0565b6119bd816120c3565b91505b60008563ffffffff168763ffffffff1684028115156119db57fe5b049050600854811015611a0d576119f1816121c3565b600260019054906101000a900460ff1694509450505050611a4d565b6000611a188261266b565b9050611a4381600260019054906101000a900460ff160360ff1683908060020a82049150508261274c565b8195509550505050505b94509492505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515611b21576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001807f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181526020017f646472657373000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16608a60049054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380608a60046101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000806000905060008060006fd3094c70f034de4b96ff7d5b6f99fcd886101515611c3e576f40000000000000000000000000000000840193506fd3094c70f034de4b96ff7d5b6f99fcd86003548702811515611c3a57fe5b0495505b6fa45af1e1f40c333b3de1db4dd55f29a786101515611c8f576f20000000000000000000000000000000840193506fa45af1e1f40c333b3de1db4dd55f29a76003548702811515611c8b57fe5b0495505b6f910b022db7ae67ce76b441c27035c6a186101515611ce0576f10000000000000000000000000000000840193506f910b022db7ae67ce76b441c27035c6a16003548702811515611cdc57fe5b0495505b6f88415abbe9a76bead8d00cf112e4d4a886101515611d31576f08000000000000000000000000000000840193506f88415abbe9a76bead8d00cf112e4d4a86003548702811515611d2d57fe5b0495505b6f84102b00893f64c705e841d5d4064bd386101515611d82576f04000000000000000000000000000000840193506f84102b00893f64c705e841d5d4064bd36003548702811515611d7e57fe5b0495505b6f8204055aaef1c8bd5c3259f4822735a286101515611dd3576f02000000000000000000000000000000840193506f8204055aaef1c8bd5c3259f4822735a26003548702811515611dcf57fe5b0495505b6f810100ab00222d861931c15e39b44e9986101515611e24576f01000000000000000000000000000000840193506f810100ab00222d861931c15e39b44e996003548702811515611e2057fe5b0495505b6f808040155aabbbe9451521693554f73386101515611e74576e800000000000000000000000000000840193506f808040155aabbbe9451521693554f7336003548702811515611e7057fe5b0495505b60035486039250829150600354838402811515611e8d57fe5b04905070010000000000000000000000000000000083700100000000000000000000000000000000038302811515611ec157fe5b0484019350600354818302811515611ed557fe5b049150700200000000000000000000000000000000836faaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa038302811515611f0857fe5b0484019350600354818302811515611f1c57fe5b049150700300000000000000000000000000000000836f99999999999999999999999999999999038302811515611f4f57fe5b0484019350600354818302811515611f6357fe5b049150700400000000000000000000000000000000836f92492492492492492492492492492492038302811515611f9657fe5b0484019350600354818302811515611faa57fe5b049150700500000000000000000000000000000000836f8e38e38e38e38e38e38e38e38e38e38e038302811515611fdd57fe5b0484019350600354818302811515611ff157fe5b049150700600000000000000000000000000000000836f8ba2e8ba2e8ba2e8ba2e8ba2e8ba2e8b03830281151561202457fe5b048401935060035481830281151561203857fe5b049150700700000000000000000000000000000000836f89d89d89d89d89d89d89d89d89d89d8903830281151561206b57fe5b048401935060035481830281151561207f57fe5b049150700800000000000000000000000000000000836f888888888888888888888888888888880383028115156120b257fe5b048401935083945050505050919050565b60008060009050600083905070010000000000000000000000000000000081101515612120576000612101600354838115156120fb57fe5b04612bf0565b90508060ff1682908060020a820491505091506003548160ff16029250505b6003548111156121a8576000600260019054906101000a900460ff1690505b60008160ff1611156121a65760035482830281151561215a57fe5b0491507001000000000000000000000000000000008210151561219a57600182908060020a820491505091506001810360ff166001549060020a02830192505b8060019003905061213f565b505b60065460055483028115156121b957fe5b0492505050919050565b600080600090506000806f10000000000000000000000000000000858115156121e857fe5b0691508190506003548282028115156121fd57fe5b0490506710e1b3be415a000081028301925060035482820281151561221e57fe5b0490506705a0913f6b1e000081028301925060035482820281151561223f57fe5b049050670168244fdac7800081028301925060035482820281151561226057fe5b049050664807432bc1800081028301925060035482820281151561228057fe5b049050660c0135dca040008102830192506003548282028115156122a057fe5b0490506601b707b1cdc0008102830192506003548282028115156122c057fe5b0490506536e0f639b8008102830192506003548282028115156122df57fe5b049050650618fee9f8008102830192506003548282028115156122fe57fe5b049050649c197dcc0081028301925060035482820281151561231c57fe5b049050640e30dce40081028301925060035482820281151561233a57fe5b04905064012ebd130081028301925060035482820281151561235857fe5b0490506317499f0081028301925060035482820281151561237557fe5b0490506301a9d48081028301925060035482820281151561239257fe5b049050621c63808102830192506003548282028115156123ae57fe5b0490506201c6388102830192506003548282028115156123ca57fe5b049050611ab88102830192506003548282028115156123e557fe5b04905061017c81028301925060035482820281151561240057fe5b049050601481028301925060035482820281151561241a57fe5b0490506001810283019250600354826721c3677c82b400008581151561243c57fe5b040101925060006f1000000000000000000000000000000086161415156124905770018ebef9eac820ae8682b9793ac6d1e7767001c3d6a24ed82218787d624d3e5eba95f9840281151561248c57fe5b0492505b60006f2000000000000000000000000000000086161415156124df577001368b2fc6f9609fe7aceb46aa619baed470018ebef9eac820ae8682b9793ac6d1e77884028115156124db57fe5b0492505b60006f40000000000000000000000000000000861614151561252d576fbc5ab1b16779be3575bd8f0520a9f21f7001368b2fc6f9609fe7aceb46aa619baed5840281151561252957fe5b0492505b60006f80000000000000000000000000000000861614151561257a576f454aaa8efe072e7f6ddbab84b40a55c96fbc5ab1b16779be3575bd8f0520a9f21e840281151561257657fe5b0492505b600070010000000000000000000000000000000086161415156125c8576f0960aadc109e7a3bf4578099615711ea6f454aaa8efe072e7f6ddbab84b40a55c584028115156125c457fe5b0492505b60007002000000000000000000000000000000008616141515612615576e2bf84208204f5977f9a8cf01fdce3d6f0960aadc109e7a3bf4578099615711d7840281151561261157fe5b0492505b60007004000000000000000000000000000000008616141515612660576d03c6ab775dd0b95b4cbee7e65d116e2bf84208204f5977f9a8cf01fdc307840281151561265c57fe5b0492505b829350505050919050565b600080600260009054906101000a900460ff1690506000600260019054906101000a900460ff1690505b8060ff166001830160ff1610156126ea576000600282840160ff168115156126b957fe5b0490508460098260ff166080811015156126cf57fe5b01541015156126e0578092506126e4565b8091505b50612695565b8360098260ff166080811015156126fd57fe5b0154101515612710578092505050612747565b8360098360ff1660808110151561272357fe5b0154101515612736578192505050612747565b6000151561274057fe5b6000925050505b919050565b60008083905060008090508360ff16858302908060020a820491505091506f03442c4e6074a82f1797f72ac00000008202810190508360ff16858302908060020a820491505091506f0116b96f757c380fb287fd0e400000008202810190508360ff16858302908060020a820491505091506e45ae5bdd5f0e03eca1ff43900000008202810190508360ff16858302908060020a820491505091506e0defabf91302cd95b9ffda500000008202810190508360ff16858302908060020a820491505091506e02529ca9832b22439efff9b80000008202810190508360ff16858302908060020a820491505091506d54f1cf12bd04e516b6da880000008202810190508360ff16858302908060020a820491505091506d0a9e39e257a09ca2d6db510000008202810190508360ff16858302908060020a820491505091506d012e066e7b839fa050c3090000008202810190508360ff16858302908060020a820491505091506c1e33d7d926c329a1ad1a8000008202810190508360ff16858302908060020a820491505091506c02bee513bdb4a6b19b5f8000008202810190508360ff16858302908060020a820491505091506b3a9316fa79b88eccf2a000008202810190508360ff16858302908060020a820491505091506b048177ebe1fa8123752000008202810190508360ff16858302908060020a820491505091506a5263fe90242dcbacf000008202810190508360ff16858302908060020a820491505091506a057e22099c030d941000008202810190508360ff16858302908060020a820491505091506957e22099c030d94100008202810190508360ff16858302908060020a8204915050915069052b6b545699763100008202810190508360ff16858302908060020a82049150509150684985f67696bf7480008202810190508360ff16858302908060020a820491505091506803dea12ea99e4980008202810190508360ff16858302908060020a820491505091506731880f2214b6e0008202810190508360ff16858302908060020a8204915050915067025bcff56eb360008202810190508360ff16858302908060020a82049150509150661b722e10ab10008202810190508360ff16858302908060020a820491505091506601317c700770008202810190508360ff16858302908060020a82049150509150650cba84aafa008202810190508360ff16858302908060020a820491505091506482573a0a008202810190508360ff16858302908060020a820491505091506405035ad9008202810190508360ff16858302908060020a82049150509150632f881b008202810190508360ff16858302908060020a820491505091506301b293408202810190508360ff16858302908060020a82049150509150620efc408202810190508360ff16858302908060020a82049150509150617fe08202810190508360ff16858302908060020a820491505091506104208202810190508360ff16858302908060020a8204915050915060218202810190508360ff16858302908060020a8204915050915060018202810190508360ff166001549060020a02856f0688589cc0e9505e2f2fee558000000083811515612be357fe5b0401019250505092915050565b600080600090506000839050610100811015612c2f575b6001811115612c2a57600181908060020a82049150509050600182019150612c07565b612c86565b6000608090505b60008160ff161115612c84578060ff166001549060020a0282101515612c6d578060ff1682908060020a8204915050915080831792505b60018160ff16908060020a82049150509050612c36565b505b819250505091905056fea165627a7a723058209178a8edbdb43379b49bfd3b4ba2f6fa163726dea0bf0f46f688c392dc704d9b0029",
  "deployedBytecode": "0x608060405260043610610112576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063095ea7b3146101175780630c7d5cd81461018a57806318160ddd146101b557806323b872dd146101e057806329a00e7c1461027357806339509351146102e657806349f9b0f71461035957806354fd4d50146103cc5780636d6f1e011461045c57806370a08231146104ab578063715018a6146105105780638da5cb5b146105275780638f32d59b1461057e57806396365d44146105ad5780639a4f318b146105d8578063a457c2d714610627578063a9059cbb1461069a578063dd62ed3e1461070d578063f2fde38b14610792578063f51e181a146107e3575b600080fd5b34801561012357600080fd5b506101706004803603604081101561013a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061080e565b604051808215151515815260200191505060405180910390f35b34801561019657600080fd5b5061019f610825565b6040518082815260200191505060405180910390f35b3480156101c157600080fd5b506101ca61082b565b6040518082815260200191505060405180910390f35b3480156101ec57600080fd5b506102596004803603606081101561020357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610835565b604051808215151515815260200191505060405180910390f35b34801561027f57600080fd5b506102d06004803603608081101561029657600080fd5b810190808035906020019092919080359060200190929190803563ffffffff169060200190929190803590602001909291905050506108e6565b6040518082815260200191505060405180910390f35b3480156102f257600080fd5b5061033f6004803603604081101561030957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610a19565b604051808215151515815260200191505060405180910390f35b34801561036557600080fd5b506103b66004803603608081101561037c57600080fd5b810190808035906020019092919080359060200190929190803563ffffffff16906020019092919080359060200190929190505050610abe565b6040518082815260200191505060405180910390f35b3480156103d857600080fd5b506103e1610c20565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610421578082015181840152602081019050610406565b50505050905090810190601f16801561044e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561046857600080fd5b506104956004803603602081101561047f57600080fd5b8101908080359060200190929190505050610cbe565b6040518082815260200191505060405180910390f35b3480156104b757600080fd5b506104fa600480360360208110156104ce57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610cde565b6040518082815260200191505060405180910390f35b34801561051c57600080fd5b50610525610d27565b005b34801561053357600080fd5b5061053c610e64565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561058a57600080fd5b50610593610e8e565b604051808215151515815260200191505060405180910390f35b3480156105b957600080fd5b506105c2610ee6565b6040518082815260200191505060405180910390f35b3480156105e457600080fd5b50610611600480360360208110156105fb57600080fd5b8101908080359060200190929190505050610eec565b6040518082815260200191505060405180910390f35b34801561063357600080fd5b506106806004803603604081101561064a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610f0c565b604051808215151515815260200191505060405180910390f35b3480156106a657600080fd5b506106f3600480360360408110156106bd57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610fb1565b604051808215151515815260200191505060405180910390f35b34801561071957600080fd5b5061077c6004803603604081101561073057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610fc8565b6040518082815260200191505060405180910390f35b34801561079e57600080fd5b506107e1600480360360208110156107b557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061104f565b005b3480156107ef57600080fd5b506107f86110d7565b6040518082815260200191505060405180910390f35b600061081b3384846110dd565b6001905092915050565b60905481565b6000608d54905090565b600061084284848461135e565b6108db84336108d685608c60008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461168890919063ffffffff16565b6110dd565b600190509392505050565b600080851180156108f75750600084115b8015610909575060008363ffffffff16115b80156109335750608a60009054906101000a900463ffffffff1663ffffffff168363ffffffff1611155b151561093e57600080fd5b60008214156109505760009050610a11565b608a60009054906101000a900463ffffffff1663ffffffff168363ffffffff1614156109a25761099b8461098d848861171390919063ffffffff16565b6117e090919063ffffffff16565b9050610a11565b60008060006109ba878661187390919063ffffffff16565b90506109da818888608a60009054906101000a900463ffffffff166118fd565b809350819450505060008260ff166109fb858b61171390919063ffffffff16565b908060020a820491505090508881039450505050505b949350505050565b6000610ab43384610aaf85608c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461187390919063ffffffff16565b6110dd565b6001905092915050565b60008085118015610acf5750600084115b8015610ae1575060008363ffffffff16115b8015610b0b5750608a60009054906101000a900463ffffffff1663ffffffff168363ffffffff1611155b8015610b175750848211155b1515610b2257600080fd5b6000821415610b345760009050610c18565b84821415610b4457839050610c18565b608a60009054906101000a900463ffffffff1663ffffffff168363ffffffff161415610b9657610b8f85610b81848761171390919063ffffffff16565b6117e090919063ffffffff16565b9050610c18565b60008060008488039050610bbe8882608a60009054906101000a900463ffffffff16896118fd565b80935081945050506000610bdb848961171390919063ffffffff16565b905060008360ff16899060020a029050610c1085610c02838561168890919063ffffffff16565b6117e090919063ffffffff16565b955050505050505b949350505050565b60898054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610cb65780601f10610c8b57610100808354040283529160200191610cb6565b820191906000526020600020905b815481529060010190602001808311610c9957829003601f168201915b505050505081565b6000610cd7610ccb61082b565b608f5460905485610abe565b9050919050565b6000608b60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610d2f610e8e565b1515610da3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16608a60049054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000608a60046101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000608a60049054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000608a60049054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b608f5481565b6000610f05610ef961082b565b608f54609054856108e6565b9050919050565b6000610fa73384610fa285608c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461168890919063ffffffff16565b6110dd565b6001905092915050565b6000610fbe33848461135e565b6001905092915050565b6000608c60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b611057610e8e565b15156110cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6110d481611a56565b50565b608e5481565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141515156111a8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001807f45524332303a20617070726f76652066726f6d20746865207a65726f2061646481526020017f726573730000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515611273576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001807f45524332303a20617070726f766520746f20746865207a65726f20616464726581526020017f737300000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b80608c60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515611429576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001807f45524332303a207472616e736665722066726f6d20746865207a65726f20616481526020017f647265737300000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156114f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001807f45524332303a207472616e7366657220746f20746865207a65726f206164647281526020017f657373000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b61154681608b60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461168890919063ffffffff16565b608b60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506115db81608b60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461187390919063ffffffff16565b608b60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000828211151515611702576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b600082840390508091505092915050565b60008083141561172657600090506117da565b6000828402905082848281151561173957fe5b041415156117d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001807f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f81526020017f770000000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b809150505b92915050565b60008082111515611859576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525060200191505060405180910390fd5b6000828481151561186657fe5b0490508091505092915050565b60008082840190508381101515156118f3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b6000806004548610151561190d57fe5b848610151515611985576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f4261736573203c203120617265206e6f7420737570706f727465642e0000000081525060200191505060405180910390fd5b60008086600354890281151561199757fe5b0490506007548110156119b4576119ad81611be1565b91506119c0565b6119bd816120c3565b91505b60008563ffffffff168763ffffffff1684028115156119db57fe5b049050600854811015611a0d576119f1816121c3565b600260019054906101000a900460ff1694509450505050611a4d565b6000611a188261266b565b9050611a4381600260019054906101000a900460ff160360ff1683908060020a82049150508261274c565b8195509550505050505b94509492505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515611b21576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001807f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181526020017f646472657373000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16608a60049054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380608a60046101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000806000905060008060006fd3094c70f034de4b96ff7d5b6f99fcd886101515611c3e576f40000000000000000000000000000000840193506fd3094c70f034de4b96ff7d5b6f99fcd86003548702811515611c3a57fe5b0495505b6fa45af1e1f40c333b3de1db4dd55f29a786101515611c8f576f20000000000000000000000000000000840193506fa45af1e1f40c333b3de1db4dd55f29a76003548702811515611c8b57fe5b0495505b6f910b022db7ae67ce76b441c27035c6a186101515611ce0576f10000000000000000000000000000000840193506f910b022db7ae67ce76b441c27035c6a16003548702811515611cdc57fe5b0495505b6f88415abbe9a76bead8d00cf112e4d4a886101515611d31576f08000000000000000000000000000000840193506f88415abbe9a76bead8d00cf112e4d4a86003548702811515611d2d57fe5b0495505b6f84102b00893f64c705e841d5d4064bd386101515611d82576f04000000000000000000000000000000840193506f84102b00893f64c705e841d5d4064bd36003548702811515611d7e57fe5b0495505b6f8204055aaef1c8bd5c3259f4822735a286101515611dd3576f02000000000000000000000000000000840193506f8204055aaef1c8bd5c3259f4822735a26003548702811515611dcf57fe5b0495505b6f810100ab00222d861931c15e39b44e9986101515611e24576f01000000000000000000000000000000840193506f810100ab00222d861931c15e39b44e996003548702811515611e2057fe5b0495505b6f808040155aabbbe9451521693554f73386101515611e74576e800000000000000000000000000000840193506f808040155aabbbe9451521693554f7336003548702811515611e7057fe5b0495505b60035486039250829150600354838402811515611e8d57fe5b04905070010000000000000000000000000000000083700100000000000000000000000000000000038302811515611ec157fe5b0484019350600354818302811515611ed557fe5b049150700200000000000000000000000000000000836faaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa038302811515611f0857fe5b0484019350600354818302811515611f1c57fe5b049150700300000000000000000000000000000000836f99999999999999999999999999999999038302811515611f4f57fe5b0484019350600354818302811515611f6357fe5b049150700400000000000000000000000000000000836f92492492492492492492492492492492038302811515611f9657fe5b0484019350600354818302811515611faa57fe5b049150700500000000000000000000000000000000836f8e38e38e38e38e38e38e38e38e38e38e038302811515611fdd57fe5b0484019350600354818302811515611ff157fe5b049150700600000000000000000000000000000000836f8ba2e8ba2e8ba2e8ba2e8ba2e8ba2e8b03830281151561202457fe5b048401935060035481830281151561203857fe5b049150700700000000000000000000000000000000836f89d89d89d89d89d89d89d89d89d89d8903830281151561206b57fe5b048401935060035481830281151561207f57fe5b049150700800000000000000000000000000000000836f888888888888888888888888888888880383028115156120b257fe5b048401935083945050505050919050565b60008060009050600083905070010000000000000000000000000000000081101515612120576000612101600354838115156120fb57fe5b04612bf0565b90508060ff1682908060020a820491505091506003548160ff16029250505b6003548111156121a8576000600260019054906101000a900460ff1690505b60008160ff1611156121a65760035482830281151561215a57fe5b0491507001000000000000000000000000000000008210151561219a57600182908060020a820491505091506001810360ff166001549060020a02830192505b8060019003905061213f565b505b60065460055483028115156121b957fe5b0492505050919050565b600080600090506000806f10000000000000000000000000000000858115156121e857fe5b0691508190506003548282028115156121fd57fe5b0490506710e1b3be415a000081028301925060035482820281151561221e57fe5b0490506705a0913f6b1e000081028301925060035482820281151561223f57fe5b049050670168244fdac7800081028301925060035482820281151561226057fe5b049050664807432bc1800081028301925060035482820281151561228057fe5b049050660c0135dca040008102830192506003548282028115156122a057fe5b0490506601b707b1cdc0008102830192506003548282028115156122c057fe5b0490506536e0f639b8008102830192506003548282028115156122df57fe5b049050650618fee9f8008102830192506003548282028115156122fe57fe5b049050649c197dcc0081028301925060035482820281151561231c57fe5b049050640e30dce40081028301925060035482820281151561233a57fe5b04905064012ebd130081028301925060035482820281151561235857fe5b0490506317499f0081028301925060035482820281151561237557fe5b0490506301a9d48081028301925060035482820281151561239257fe5b049050621c63808102830192506003548282028115156123ae57fe5b0490506201c6388102830192506003548282028115156123ca57fe5b049050611ab88102830192506003548282028115156123e557fe5b04905061017c81028301925060035482820281151561240057fe5b049050601481028301925060035482820281151561241a57fe5b0490506001810283019250600354826721c3677c82b400008581151561243c57fe5b040101925060006f1000000000000000000000000000000086161415156124905770018ebef9eac820ae8682b9793ac6d1e7767001c3d6a24ed82218787d624d3e5eba95f9840281151561248c57fe5b0492505b60006f2000000000000000000000000000000086161415156124df577001368b2fc6f9609fe7aceb46aa619baed470018ebef9eac820ae8682b9793ac6d1e77884028115156124db57fe5b0492505b60006f40000000000000000000000000000000861614151561252d576fbc5ab1b16779be3575bd8f0520a9f21f7001368b2fc6f9609fe7aceb46aa619baed5840281151561252957fe5b0492505b60006f80000000000000000000000000000000861614151561257a576f454aaa8efe072e7f6ddbab84b40a55c96fbc5ab1b16779be3575bd8f0520a9f21e840281151561257657fe5b0492505b600070010000000000000000000000000000000086161415156125c8576f0960aadc109e7a3bf4578099615711ea6f454aaa8efe072e7f6ddbab84b40a55c584028115156125c457fe5b0492505b60007002000000000000000000000000000000008616141515612615576e2bf84208204f5977f9a8cf01fdce3d6f0960aadc109e7a3bf4578099615711d7840281151561261157fe5b0492505b60007004000000000000000000000000000000008616141515612660576d03c6ab775dd0b95b4cbee7e65d116e2bf84208204f5977f9a8cf01fdc307840281151561265c57fe5b0492505b829350505050919050565b600080600260009054906101000a900460ff1690506000600260019054906101000a900460ff1690505b8060ff166001830160ff1610156126ea576000600282840160ff168115156126b957fe5b0490508460098260ff166080811015156126cf57fe5b01541015156126e0578092506126e4565b8091505b50612695565b8360098260ff166080811015156126fd57fe5b0154101515612710578092505050612747565b8360098360ff1660808110151561272357fe5b0154101515612736578192505050612747565b6000151561274057fe5b6000925050505b919050565b60008083905060008090508360ff16858302908060020a820491505091506f03442c4e6074a82f1797f72ac00000008202810190508360ff16858302908060020a820491505091506f0116b96f757c380fb287fd0e400000008202810190508360ff16858302908060020a820491505091506e45ae5bdd5f0e03eca1ff43900000008202810190508360ff16858302908060020a820491505091506e0defabf91302cd95b9ffda500000008202810190508360ff16858302908060020a820491505091506e02529ca9832b22439efff9b80000008202810190508360ff16858302908060020a820491505091506d54f1cf12bd04e516b6da880000008202810190508360ff16858302908060020a820491505091506d0a9e39e257a09ca2d6db510000008202810190508360ff16858302908060020a820491505091506d012e066e7b839fa050c3090000008202810190508360ff16858302908060020a820491505091506c1e33d7d926c329a1ad1a8000008202810190508360ff16858302908060020a820491505091506c02bee513bdb4a6b19b5f8000008202810190508360ff16858302908060020a820491505091506b3a9316fa79b88eccf2a000008202810190508360ff16858302908060020a820491505091506b048177ebe1fa8123752000008202810190508360ff16858302908060020a820491505091506a5263fe90242dcbacf000008202810190508360ff16858302908060020a820491505091506a057e22099c030d941000008202810190508360ff16858302908060020a820491505091506957e22099c030d94100008202810190508360ff16858302908060020a8204915050915069052b6b545699763100008202810190508360ff16858302908060020a82049150509150684985f67696bf7480008202810190508360ff16858302908060020a820491505091506803dea12ea99e4980008202810190508360ff16858302908060020a820491505091506731880f2214b6e0008202810190508360ff16858302908060020a8204915050915067025bcff56eb360008202810190508360ff16858302908060020a82049150509150661b722e10ab10008202810190508360ff16858302908060020a820491505091506601317c700770008202810190508360ff16858302908060020a82049150509150650cba84aafa008202810190508360ff16858302908060020a820491505091506482573a0a008202810190508360ff16858302908060020a820491505091506405035ad9008202810190508360ff16858302908060020a82049150509150632f881b008202810190508360ff16858302908060020a820491505091506301b293408202810190508360ff16858302908060020a82049150509150620efc408202810190508360ff16858302908060020a82049150509150617fe08202810190508360ff16858302908060020a820491505091506104208202810190508360ff16858302908060020a8204915050915060218202810190508360ff16858302908060020a8204915050915060018202810190508360ff166001549060020a02856f0688589cc0e9505e2f2fee558000000083811515612be357fe5b0401019250505092915050565b600080600090506000839050610100811015612c2f575b6001811115612c2a57600181908060020a82049150509050600182019150612c07565b612c86565b6000608090505b60008160ff161115612c84578060ff166001549060020a0282101515612c6d578060ff1682908060020a8204915050915080831792505b60018160ff16908060020a82049150509050612c36565b505b819250505091905056fea165627a7a723058209178a8edbdb43379b49bfd3b4ba2f6fa163726dea0bf0f46f688c392dc704d9b0029",
  "sourceMap": "313:2133:1:-;;;401:29:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;459:1;437:23;;496:2;466:32;;;;;;;;;;;;;;;;;;;;534:3;504:33;;;;;;;;;;;;;;;;;;;;756:35;730:61;;899:35;873:61;;1039:33;1007:65;;1112:33;1078:67;;1286:35;1252:69;;1361:35;1327:69;;586:29:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;649:7;621:35;;;;;;;;;;;;;;;;;;;;494:6:1;471:29;;539:5;;535:1;:9;506:38;;584:125;8:9:-1;5:2;;;30:1;27;20:12;5:2;584:125:1;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;584:125:1;;;;;;;;;;;;;;;;3880:36:3;3862:11;3874:2;3862:15;;;;;;;;;;:54;;;;3944:36;3926:11;3938:2;3926:15;;;;;;;;;;:54;;;;4008:36;3990:11;4002:2;3990:15;;;;;;;;;;:54;;;;4072:36;4054:11;4066:2;4054:15;;;;;;;;;;:54;;;;4136:36;4118:11;4130:2;4118:15;;;;;;;;;;:54;;;;4200:36;4182:11;4194:2;4182:15;;;;;;;;;;:54;;;;4264:36;4246:11;4258:2;4246:15;;;;;;;;;;:54;;;;4328:36;4310:11;4322:2;4310:15;;;;;;;;;;:54;;;;4392:36;4374:11;4386:2;4374:15;;;;;;;;;;:54;;;;4456:36;4438:11;4450:2;4438:15;;;;;;;;;;:54;;;;4520:36;4502:11;4514:2;4502:15;;;;;;;;;;:54;;;;4584:36;4566:11;4578:2;4566:15;;;;;;;;;;:54;;;;4648:36;4630:11;4642:2;4630:15;;;;;;;;;;:54;;;;4712:36;4694:11;4706:2;4694:15;;;;;;;;;;:54;;;;4776:36;4758:11;4770:2;4758:15;;;;;;;;;;:54;;;;4840:36;4822:11;4834:2;4822:15;;;;;;;;;;:54;;;;4904:36;4886:11;4898:2;4886:15;;;;;;;;;;:54;;;;4968:36;4950:11;4962:2;4950:15;;;;;;;;;;:54;;;;5032:36;5014:11;5026:2;5014:15;;;;;;;;;;:54;;;;5096:36;5078:11;5090:2;5078:15;;;;;;;;;;:54;;;;5160:36;5142:11;5154:2;5142:15;;;;;;;;;;:54;;;;5224:36;5206:11;5218:2;5206:15;;;;;;;;;;:54;;;;5288:36;5270:11;5282:2;5270:15;;;;;;;;;;:54;;;;5352:36;5334:11;5346:2;5334:15;;;;;;;;;;:54;;;;5416:36;5398:11;5410:2;5398:15;;;;;;;;;;:54;;;;5480:36;5462:11;5474:2;5462:15;;;;;;;;;;:54;;;;5544:36;5526:11;5538:2;5526:15;;;;;;;;;;:54;;;;5608:36;5590:11;5602:2;5590:15;;;;;;;;;;:54;;;;5672:36;5654:11;5666:2;5654:15;;;;;;;;;;:54;;;;5736:36;5718:11;5730:2;5718:15;;;;;;;;;;:54;;;;5800:36;5782:11;5794:2;5782:15;;;;;;;;;;:54;;;;5864:36;5846:11;5858:2;5846:15;;;;;;;;;;:54;;;;5928:36;5910:11;5922:2;5910:15;;;;;;;;;;:54;;;;5992:36;5974:11;5986:2;5974:15;;;;;;;;;;:54;;;;6056:36;6038:11;6050:2;6038:15;;;;;;;;;;:54;;;;6120:36;6102:11;6114:2;6102:15;;;;;;;;;;:54;;;;6184:36;6166:11;6178:2;6166:15;;;;;;;;;;:54;;;;6248:36;6230:11;6242:2;6230:15;;;;;;;;;;:54;;;;6312:36;6294:11;6306:2;6294:15;;;;;;;;;;:54;;;;6376:36;6358:11;6370:2;6358:15;;;;;;;;;;:54;;;;6440:36;6422:11;6434:2;6422:15;;;;;;;;;;:54;;;;6504:36;6486:11;6498:2;6486:15;;;;;;;;;;:54;;;;6568:36;6550:11;6562:2;6550:15;;;;;;;;;;:54;;;;6632:36;6614:11;6626:2;6614:15;;;;;;;;;;:54;;;;6696:36;6678:11;6690:2;6678:15;;;;;;;;;;:54;;;;6760:36;6742:11;6754:2;6742:15;;;;;;;;;;:54;;;;6824:36;6806:11;6818:2;6806:15;;;;;;;;;;:54;;;;6888:36;6870:11;6882:2;6870:15;;;;;;;;;;:54;;;;6952:36;6934:11;6946:2;6934:15;;;;;;;;;;:54;;;;7016:36;6998:11;7010:2;6998:15;;;;;;;;;;:54;;;;7080:36;7062:11;7074:2;7062:15;;;;;;;;;;:54;;;;7144:36;7126:11;7138:2;7126:15;;;;;;;;;;:54;;;;7208:36;7190:11;7202:2;7190:15;;;;;;;;;;:54;;;;7272:36;7254:11;7266:2;7254:15;;;;;;;;;;:54;;;;7336:36;7318:11;7330:2;7318:15;;;;;;;;;;:54;;;;7400:36;7382:11;7394:2;7382:15;;;;;;;;;;:54;;;;7464:36;7446:11;7458:2;7446:15;;;;;;;;;;:54;;;;7528:36;7510:11;7522:2;7510:15;;;;;;;;;;:54;;;;7592:36;7574:11;7586:2;7574:15;;;;;;;;;;:54;;;;7656:36;7638:11;7650:2;7638:15;;;;;;;;;;:54;;;;7720:36;7702:11;7714:2;7702:15;;;;;;;;;;:54;;;;7784:36;7766:11;7778:2;7766:15;;;;;;;;;;:54;;;;7848:36;7830:11;7842:2;7830:15;;;;;;;;;;:54;;;;7912:36;7894:11;7906:2;7894:15;;;;;;;;;;:54;;;;7976:36;7958:11;7970:2;7958:15;;;;;;;;;;:54;;;;8040:36;8022:11;8034:2;8022:15;;;;;;;;;;:54;;;;8104:36;8086:11;8098:2;8086:15;;;;;;;;;;:54;;;;8168:36;8150:11;8162:2;8150:15;;;;;;;;;;:54;;;;8233:36;8214:11;8226:3;8214:16;;;;;;;;;;:55;;;;8298:36;8279:11;8291:3;8279:16;;;;;;;;;;:55;;;;8363:36;8344:11;8356:3;8344:16;;;;;;;;;;:55;;;;8428:36;8409:11;8421:3;8409:16;;;;;;;;;;:55;;;;8493:36;8474:11;8486:3;8474:16;;;;;;;;;;:55;;;;8558:36;8539:11;8551:3;8539:16;;;;;;;;;;:55;;;;8623:36;8604:11;8616:3;8604:16;;;;;;;;;;:55;;;;8688:36;8669:11;8681:3;8669:16;;;;;;;;;;:55;;;;8753:36;8734:11;8746:3;8734:16;;;;;;;;;;:55;;;;8818:36;8799:11;8811:3;8799:16;;;;;;;;;;:55;;;;8883:36;8864:11;8876:3;8864:16;;;;;;;;;;:55;;;;8948:36;8929:11;8941:3;8929:16;;;;;;;;;;:55;;;;9013:36;8994:11;9006:3;8994:16;;;;;;;;;;:55;;;;9078:36;9059:11;9071:3;9059:16;;;;;;;;;;:55;;;;9143:36;9124:11;9136:3;9124:16;;;;;;;;;;:55;;;;9208:36;9189:11;9201:3;9189:16;;;;;;;;;;:55;;;;9273:36;9254:11;9266:3;9254:16;;;;;;;;;;:55;;;;9338:36;9319:11;9331:3;9319:16;;;;;;;;;;:55;;;;9403:36;9384:11;9396:3;9384:16;;;;;;;;;;:55;;;;9468:36;9449:11;9461:3;9449:16;;;;;;;;;;:55;;;;9533:36;9514:11;9526:3;9514:16;;;;;;;;;;:55;;;;9598:36;9579:11;9591:3;9579:16;;;;;;;;;;:55;;;;9663:36;9644:11;9656:3;9644:16;;;;;;;;;;:55;;;;9728:36;9709:11;9721:3;9709:16;;;;;;;;;;:55;;;;9793:36;9774:11;9786:3;9774:16;;;;;;;;;;:55;;;;9858:36;9839:11;9851:3;9839:16;;;;;;;;;;:55;;;;9923:36;9904:11;9916:3;9904:16;;;;;;;;;;:55;;;;9988:36;9969:11;9981:3;9969:16;;;;;;;;;;:55;;;;666:10:10;657:6;;:19;;;;;;;;;;;;;;;;;;724:6;;;;;;;;;;;691:40;;720:1;691:40;;;;;;;;;;;;651:13:1;636:12;:28;;;;674;680:10;696:5;;692:1;:9;674:5;;;:28;;;:::i;:::-;584:125;313:2133;;5771:302:11;5865:1;5846:21;;:7;:21;;;;5838:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5929:24;5946:6;5929:12;;:16;;;;;;:24;;;;;:::i;:::-;5914:12;:39;;;;5984:30;6007:6;5984:9;:18;5994:7;5984:18;;;;;;;;;;;;;;;;:22;;;;;;:30;;;;;:::i;:::-;5963:9;:18;5973:7;5963:18;;;;;;;;;;;;;;;:51;;;;6050:7;6029:37;;6046:1;6029:37;;;6059:6;6029:37;;;;;;;;;;;;;;;;;;5771:302;;:::o;834:176:9:-;892:7;911:9;927:1;923;:5;911:17;;951:1;946;:6;;938:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;995:8;;;834:176;;;;:::o;313:2133:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "313:2133:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2453:145:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2453:145:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2453:145:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;550:27:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;550:27:1;;;;;;;;;;;;;;;;;;;;;;;1514:89:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1514:89:11;;;;;;;;;;;;;;;;;;;;;;;3055:252;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3055:252:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3055:252:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1277:1065:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1277:1065:0;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;1277:1065:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3702:203:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3702:203:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3702:203:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2955:1273:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2955:1273:0;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;2955:1273:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;586:29;;8:9:-1;5:2;;;30:1;27;20:12;5:2;586:29:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;586:29:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1038:313:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1038:313:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1038:313:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1661:108:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1661:108:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1661:108:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1599:137:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1599:137:10;;;;;;814:77;;8:9:-1;5:2;;;30:1;27;20:12;5:2;814:77:10;;;;;;;;;;;;;;;;;;;;;;;;;;;1165:90;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1165:90:10;;;;;;;;;;;;;;;;;;;;;;;;;;;506:38:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;506:38:1;;;;;;;;;;;;;;;;;;;;;;;715:317;;8:9:-1;5:2;;;30:1;27;20:12;5:2;715:317:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;715:317:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4392:213:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4392:213:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4392:213:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1972:153;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1972:153:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1972:153:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2183:132;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2183:132:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2183:132:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1885:107:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1885:107:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1885:107:10;;;;;;;;;;;;;;;;;;;;;;471:29:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;471:29:1;;;;;;;;;;;;;;;;;;;;;;;2453:145:11;2518:4;2534:36;2543:10;2555:7;2564:5;2534:8;:36::i;:::-;2587:4;2580:11;;2453:145;;;;:::o;550:27:1:-;;;;:::o;1514:89:11:-;1558:7;1584:12;;1577:19;;1514:89;:::o;3055:252::-;3144:4;3160:36;3170:6;3178:9;3189:6;3160:9;:36::i;:::-;3206:73;3215:6;3223:10;3235:43;3271:6;3235:11;:19;3247:6;3235:19;;;;;;;;;;;;;;;:31;3255:10;3235:31;;;;;;;;;;;;;;;;:35;;:43;;;;:::i;:::-;3206:8;:73::i;:::-;3296:4;3289:11;;3055:252;;;;;:::o;1277:1065:0:-;1462:7;1538:1;1528:7;:11;:52;;;;;1579:1;1559:17;:21;1528:52;:92;;;;;1619:1;1600:16;:20;;;1528:92;:142;;;;;1660:10;;;;;;;;;;;1640:30;;:16;:30;;;;1528:142;1507:173;;;;;;;;1757:1;1739:14;:19;1735:58;;;1781:1;1774:8;;;;1735:58;1871:10;;;;;;;;;;;1851:30;;:16;:30;;;1847:118;;;1904:50;1936:17;1904:27;1916:14;1904:7;:11;;:27;;;;:::i;:::-;:31;;:50;;;;:::i;:::-;1897:57;;;;1847:118;1974:14;1998:15;2023:13;2039:37;2058:17;2039:14;:18;;:37;;;;:::i;:::-;2023:53;;2108:119;2127:5;2146:17;2177:16;2207:10;;;;;;;;;;;2108:5;:119::i;:::-;2086:141;;;;;;;;2237:22;2285:9;2262:32;;:19;2274:6;2262:7;:11;;:19;;;;:::i;:::-;:32;52:12:-1;49:1;45:20;29:14;25:41;7:59;;2262:32:0;2237:57;;2328:7;2311:14;:24;2304:31;;;;;;1277:1065;;;;;;;:::o;3702:203:11:-;3782:4;3798:79;3807:10;3819:7;3828:48;3865:10;3828:11;:23;3840:10;3828:23;;;;;;;;;;;;;;;:32;3852:7;3828:32;;;;;;;;;;;;;;;;:36;;:48;;;;:::i;:::-;3798:8;:79::i;:::-;3894:4;3887:11;;3702:203;;;;:::o;2955:1273:0:-;3133:7;3209:1;3199:7;:11;:52;;;;;3250:1;3230:17;:21;3199:52;:92;;;;;3290:1;3271:16;:20;;;3199:92;:142;;;;;3331:10;;;;;;;;;;;3311:30;;:16;:30;;;;3199:142;:184;;;;;3376:7;3361:11;:22;;3199:184;3178:215;;;;;;;;3464:1;3449:11;:16;3445:55;;;3488:1;3481:8;;;;3445:55;3582:7;3567:11;:22;3563:77;;;3612:17;3605:24;;;;3563:77;3718:10;;;;;;;;;;;3698:30;;:16;:30;;;3694:115;;;3751:47;3790:7;3751:34;3773:11;3751:17;:21;;:34;;;;:::i;:::-;:38;;:47;;;;:::i;:::-;3744:54;;;;3694:115;3818:14;3842:15;3867:13;3893:11;3883:7;:21;3867:37;;3936:109;3955:7;3976:5;3995:10;;;;;;;;;;;4019:16;3936:5;:109::i;:::-;3914:131;;;;;;;;4055:18;4076:29;4098:6;4076:17;:21;;:29;;;;:::i;:::-;4055:50;;4115:18;4157:9;4136:30;;:17;:30;;;;4115:51;;4183:38;4214:6;4183:26;4198:10;4183;:14;;:26;;;;:::i;:::-;:30;;:38;;;;:::i;:::-;4176:45;;;;;;;2955:1273;;;;;;;:::o;586:29::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1038:313:1:-;1135:18;1188:156;1225:13;:11;:13::i;:::-;1256:11;;1292:12;;1323:7;1188:19;:156::i;:::-;1169:175;;1038:313;;;:::o;1661:108:11:-;1718:7;1744:9;:18;1754:7;1744:18;;;;;;;;;;;;;;;;1737:25;;1661:108;;;:::o;1599:137:10:-;1018:9;:7;:9::i;:::-;1010:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1697:1;1660:40;;1681:6;;;;;;;;;;;1660:40;;;;;;;;;;;;1727:1;1710:6;;:19;;;;;;;;;;;;;;;;;;1599:137::o;814:77::-;852:7;878:6;;;;;;;;;;;871:13;;814:77;:::o;1165:90::-;1205:4;1242:6;;;;;;;;;;;1228:20;;:10;:20;;;1221:27;;1165:90;:::o;506:38:1:-;;;;:::o;715:317::-;812:18;865:160;906:13;:11;:13::i;:::-;937:11;;973:12;;1004:7;865:23;:160::i;:::-;846:179;;715:317;;;:::o;4392:213:11:-;4477:4;4493:84;4502:10;4514:7;4523:53;4560:15;4523:11;:23;4535:10;4523:23;;;;;;;;;;;;;;;:32;4547:7;4523:32;;;;;;;;;;;;;;;;:36;;:53;;;;:::i;:::-;4493:8;:84::i;:::-;4594:4;4587:11;;4392:213;;;;:::o;1972:153::-;2041:4;2057:40;2067:10;2079:9;2090:6;2057:9;:40::i;:::-;2114:4;2107:11;;1972:153;;;;:::o;2183:132::-;2255:7;2281:11;:18;2293:5;2281:18;;;;;;;;;;;;;;;:27;2300:7;2281:27;;;;;;;;;;;;;;;;2274:34;;2183:132;;;;:::o;1885:107:10:-;1018:9;:7;:9::i;:::-;1010:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1957:28;1976:8;1957:18;:28::i;:::-;1885:107;:::o;471:29:1:-;;;;:::o;7117:329:11:-;7226:1;7209:19;;:5;:19;;;;7201:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7306:1;7287:21;;:7;:21;;;;7279:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7388:5;7358:11;:18;7370:5;7358:18;;;;;;;;;;;;;;;:27;7377:7;7358:27;;;;;;;;;;;;;;;:35;;;;7424:7;7408:31;;7417:5;7408:31;;;7433:5;7408:31;;;;;;;;;;;;;;;;;;7117:329;;;:::o;5079:422::-;5194:1;5176:20;;:6;:20;;;;5168:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5277:1;5256:23;;:9;:23;;;;5248:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5350:29;5372:6;5350:9;:17;5360:6;5350:17;;;;;;;;;;;;;;;;:21;;:29;;;;:::i;:::-;5330:9;:17;5340:6;5330:17;;;;;;;;;;;;;;;:49;;;;5412:32;5437:6;5412:9;:20;5422:9;5412:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;5389:9;:20;5399:9;5389:20;;;;;;;;;;;;;;;:55;;;;5476:9;5459:35;;5468:6;5459:35;;;5487:6;5459:35;;;;;;;;;;;;;;;;;;5079:422;;;:::o;1274:179:9:-;1332:7;1364:1;1359;:6;;1351:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1410:9;1426:1;1422;:5;1410:17;;1445:1;1438:8;;;1274:179;;;;:::o;1693:458::-;1751:7;1996:1;1991;:6;1987:45;;;2020:1;2013:8;;;;1987:45;2042:9;2058:1;2054;:5;2042:17;;2086:1;2081;2077;:5;;;;;;;;:10;2069:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2143:1;2136:8;;;1693:458;;;;;:::o;2606:326::-;2664:7;2761:1;2757;:5;2749:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2803:9;2819:1;2815;:5;;;;;;;;2803:17;;2924:1;2917:8;;;2606:326;;;;:::o;834:176::-;892:7;911:9;927:1;923;:5;911:17;;951:1;946;:6;;938:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;995:8;;;834:176;;;;:::o;11388:957:3:-;11510:7;11519:5;11556:7;;11547:6;:16;11540:24;;;;;;11592:6;11582;:16;;11574:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11642:15;11667:12;11703:6;11692:7;;11683:6;:16;11682:27;;;;;;;;11667:42;;11730:15;;11723:4;:22;11719:136;;;11771:16;11782:4;11771:10;:16::i;:::-;11761:26;;11719:136;;;11828:16;11839:4;11828:10;:16::i;:::-;11818:26;;11719:136;11865:23;11911:5;11891:25;;11902:5;11892:15;;:7;:15;11891:25;;;;;;;;11865:51;;11948:15;;11930;:33;11926:413;;;11987:27;11998:15;11987:10;:27::i;:::-;12016:13;;;;;;;;;;;11979:51;;;;;;;;;11926:413;12061:15;12079:42;12105:15;12079:25;:42::i;:::-;12061:60;;12160:127;12228:9;12212:13;;;;;;;;;;;:25;12192:46;;:15;:46;52:12:-1;49:1;45:20;29:14;25:41;7:59;;12192:46:3;12260:9;12160:10;:127::i;:::-;12305:9;12135:193;;;;;;;;11388:957;;;;;;;;:::o;2093:225:10:-;2186:1;2166:22;;:8;:22;;;;2158:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2275:8;2246:38;;2267:6;;;;;;;;;;;2246:38;;;;;;;;;;;;2303:8;2294:6;;:17;;;;;;;;;;;;;;;;;;2093:225;:::o;19671:2965:3:-;19725:7;19744:11;19758:1;19744:15;;19770:9;19789;19808;19837:34;19832:1;:39;;19828:179;;;19894:34;19887:41;;;;19962:34;19951:7;;19947:1;:11;19946:50;;;;;;;;19942:54;;19828:179;20025:34;20020:1;:39;;20016:179;;;20082:34;20075:41;;;;20150:34;20139:7;;20135:1;:11;20134:50;;;;;;;;20130:54;;20016:179;20213:34;20208:1;:39;;20204:179;;;20270:34;20263:41;;;;20338:34;20327:7;;20323:1;:11;20322:50;;;;;;;;20318:54;;20204:179;20401:34;20396:1;:39;;20392:179;;;20458:34;20451:41;;;;20526:34;20515:7;;20511:1;:11;20510:50;;;;;;;;20506:54;;20392:179;20589:34;20584:1;:39;;20580:179;;;20646:34;20639:41;;;;20714:34;20703:7;;20699:1;:11;20698:50;;;;;;;;20694:54;;20580:179;20777:34;20772:1;:39;;20768:179;;;20834:34;20827:41;;;;20902:34;20891:7;;20887:1;:11;20886:50;;;;;;;;20882:54;;20768:179;20965:34;20960:1;:39;;20956:179;;;21022:34;21015:41;;;;21090:34;21079:7;;21075:1;:11;21074:50;;;;;;;;21070:54;;20956:179;21153:34;21148:1;:39;;21144:179;;;21210:34;21203:41;;;;21278:34;21267:7;;21263:1;:11;21262:50;;;;;;;;21258:54;;21144:179;21345:7;;21341:1;:11;21337:15;;;21333:19;;21376:7;;21371:1;21367;:5;21366:17;;;;;;;;21362:21;;21474:35;21456:1;21418:35;:39;21413:1;:45;21412:97;;;;;;;;21393:116;;;;21533:7;;21528:1;21524;:5;21523:17;;;;;;;;21519:21;;21631:35;21613:1;21575:35;:39;21570:1;:45;21569:97;;;;;;;;21550:116;;;;21690:7;;21685:1;21681;:5;21680:17;;;;;;;;21676:21;;21788:35;21770:1;21732:35;:39;21727:1;:45;21726:97;;;;;;;;21707:116;;;;21847:7;;21842:1;21838;:5;21837:17;;;;;;;;21833:21;;21945:35;21927:1;21889:35;:39;21884:1;:45;21883:97;;;;;;;;21864:116;;;;22004:7;;21999:1;21995;:5;21994:17;;;;;;;;21990:21;;22102:35;22084:1;22046:35;:39;22041:1;:45;22040:97;;;;;;;;22021:116;;;;22161:7;;22156:1;22152;:5;22151:17;;;;;;;;22147:21;;22259:35;22241:1;22203:35;:39;22198:1;:45;22197:97;;;;;;;;22178:116;;;;22318:7;;22313:1;22309;:5;22308:17;;;;;;;;22304:21;;22416:35;22398:1;22360:35;:39;22355:1;:45;22354:97;;;;;;;;22335:116;;;;22475:7;;22470:1;22466;:5;22465:17;;;;;;;;22461:21;;22573:35;22555:1;22517:35;:39;22512:1;:45;22511:97;;;;;;;;22492:116;;;;22626:3;22619:10;;;;;;19671:2965;;;:::o;12504:828::-;12559:7;12578:11;12592:1;12578:15;;12603:9;12615:2;12603:14;;832:35;12723:1;:12;;12719:152;;;12751:11;12765:22;12779:7;;12775:1;:11;;;;;;;;12765:9;:22::i;:::-;12751:36;;12807:5;12801:11;;;;52:12:-1;49:1;45:20;29:14;25:41;7:59;;12801:11:3;;;12853:7;;12845:5;:15;;;12839:21;;12719:152;;12980:7;;12976:1;:11;12972:297;;;13008:7;13018:13;;;;;;;;;;;13008:23;;13003:256;13037:1;13033;:5;;;13003:256;;;13077:7;;13072:1;13068;:5;13067:17;;;;;;;;13063:21;;832:35;13123:1;:12;;13119:126;;;13165:1;13159:7;;52:12:-1;49:1;45:20;29:14;25:41;7:59;;13159:7:3;;;13224:1;13220;:5;13212:14;;:3;;:14;;;;13205:21;;;;13119:126;13040:3;;;;;;13003:256;;;;12972:297;13310:15;;13293:13;;13287:3;:19;13286:39;;;;;;;;13279:46;;;;12504:828;;;:::o;22803:3492::-;22857:7;22876:11;22890:1;22876:15;;22902:9;22921;22953:34;22949:1;:38;;;;;;;;22945:42;;;22941:46;;23011:7;;23006:1;23002;:5;23001:17;;;;;;;;22997:21;;23039:18;23035:1;:22;23028:29;;;;23107:7;;23102:1;23098;:5;23097:17;;;;;;;;23093:21;;23135:18;23131:1;:22;23124:29;;;;23203:7;;23198:1;23194;:5;23193:17;;;;;;;;23189:21;;23231:18;23227:1;:22;23220:29;;;;23299:7;;23294:1;23290;:5;23289:17;;;;;;;;23285:21;;23327:18;23323:1;:22;23316:29;;;;23395:7;;23390:1;23386;:5;23385:17;;;;;;;;23381:21;;23423:18;23419:1;:22;23412:29;;;;23491:7;;23486:1;23482;:5;23481:17;;;;;;;;23477:21;;23519:18;23515:1;:22;23508:29;;;;23587:7;;23582:1;23578;:5;23577:17;;;;;;;;23573:21;;23615:18;23611:1;:22;23604:29;;;;23683:7;;23678:1;23674;:5;23673:17;;;;;;;;23669:21;;23711:18;23707:1;:22;23700:29;;;;23779:7;;23774:1;23770;:5;23769:17;;;;;;;;23765:21;;23807:18;23803:1;:22;23796:29;;;;23875:7;;23870:1;23866;:5;23865:17;;;;;;;;23861:21;;23903:18;23899:1;:22;23892:29;;;;23971:7;;23966:1;23962;:5;23961:17;;;;;;;;23957:21;;23999:18;23995:1;:22;23988:29;;;;24067:7;;24062:1;24058;:5;24057:17;;;;;;;;24053:21;;24095:18;24091:1;:22;24084:29;;;;24163:7;;24158:1;24154;:5;24153:17;;;;;;;;24149:21;;24191:18;24187:1;:22;24180:29;;;;24259:7;;24254:1;24250;:5;24249:17;;;;;;;;24245:21;;24287:18;24283:1;:22;24276:29;;;;24355:7;;24350:1;24346;:5;24345:17;;;;;;;;24341:21;;24383:18;24379:1;:22;24372:29;;;;24451:7;;24446:1;24442;:5;24441:17;;;;;;;;24437:21;;24479:18;24475:1;:22;24468:29;;;;24547:7;;24542:1;24538;:5;24537:17;;;;;;;;24533:21;;24575:18;24571:1;:22;24564:29;;;;24643:7;;24638:1;24634;:5;24633:17;;;;;;;;24629:21;;24671:18;24667:1;:22;24660:29;;;;24739:7;;24734:1;24730;:5;24729:17;;;;;;;;24725:21;;24767:18;24763:1;:22;24756:29;;;;24858:7;;24854:1;24833:18;24827:3;:24;;;;;;;;:28;:38;24821:44;;24975:1;24935:35;24931:1;:39;24930:46;;24926:183;;;25074:35;25019;25013:3;:41;25012:97;;;;;;;;24990:119;;24926:183;25168:1;25128:35;25124:1;:39;25123:46;;25119:183;;;25267:35;25212;25206:3;:41;25205:97;;;;;;;;25183:119;;25119:183;25361:1;25321:35;25317:1;:39;25316:46;;25312:183;;;25460:35;25405;25399:3;:41;25398:97;;;;;;;;25376:119;;25312:183;25554:1;25514:35;25510:1;:39;25509:46;;25505:183;;;25653:35;25598;25592:3;:41;25591:97;;;;;;;;25569:119;;25505:183;25747:1;25707:35;25703:1;:39;25702:46;;25698:183;;;25846:35;25791;25785:3;:41;25784:97;;;;;;;;25762:119;;25698:183;25940:1;25900:35;25896:1;:39;25895:46;;25891:183;;;26039:35;25984;25978:3;:41;25977:97;;;;;;;;25955:119;;25891:183;26133:1;26093:35;26089:1;:39;26088:46;;26084:183;;;26232:35;26177;26171:3;:41;26170:97;;;;;;;;26148:119;;26084:183;26285:3;26278:10;;;;;22803:3492;;;:::o;14328:472::-;14422:5;14443:8;14454:13;;;;;;;;;;;14443:24;;14477:8;14488:13;;;;;;;;;;;14477:24;;14512:147;14528:2;14519:11;;14524:1;14519:2;:6;:11;;;14512:147;;;14546:9;14570:1;14564:2;14559;:7;14558:13;;;;;;;;;;14546:25;;14609:2;14589:11;14601:3;14589:16;;;;;;;;;;;;;:22;;14585:63;;;14618:3;14613:8;;14585:63;;;14645:3;14640:8;;14585:63;14512:147;;;;14692:2;14673:11;14685:2;14673:15;;;;;;;;;;;;;:21;;14669:36;;;14703:2;14696:9;;;;;;14669:36;14738:2;14719:11;14731:2;14719:15;;;;;;;;;;;;;:21;;14715:36;;;14749:2;14742:9;;;;;;14715:36;14769:5;14762:13;;;;;;14792:1;14785:8;;;;14328:472;;;;:::o;15377:4122::-;15474:7;15497:10;15510:2;15497:15;;15522:11;15536:1;15522:15;;15566:10;15553:23;;15559:2;15554;:7;15553:23;52:12:-1;49:1;45:20;29:14;25:41;7:59;;15553:23:3;15548:28;;15598:33;15593:2;:38;15586:45;;;;15685:10;15672:23;;15678:2;15673;:7;15672:23;52:12:-1;49:1;45:20;29:14;25:41;7:59;;15672:23:3;15667:28;;15717:33;15712:2;:38;15705:45;;;;15804:10;15791:23;;15797:2;15792;:7;15791:23;52:12:-1;49:1;45:20;29:14;25:41;7:59;;15791:23:3;15786:28;;15836:33;15831:2;:38;15824:45;;;;15923:10;15910:23;;15916:2;15911;:7;15910:23;52:12:-1;49:1;45:20;29:14;25:41;7:59;;15910:23:3;15905:28;;15955:33;15950:2;:38;15943:45;;;;16042:10;16029:23;;16035:2;16030;:7;16029:23;52:12:-1;49:1;45:20;29:14;25:41;7:59;;16029:23:3;16024:28;;16074:33;16069:2;:38;16062:45;;;;16161:10;16148:23;;16154:2;16149;:7;16148:23;52:12:-1;49:1;45:20;29:14;25:41;7:59;;16148:23:3;16143:28;;16193:33;16188:2;:38;16181:45;;;;16280:10;16267:23;;16273:2;16268;:7;16267:23;52:12:-1;49:1;45:20;29:14;25:41;7:59;;16267:23:3;16262:28;;16312:33;16307:2;:38;16300:45;;;;16399:10;16386:23;;16392:2;16387;:7;16386:23;52:12:-1;49:1;45:20;29:14;25:41;7:59;;16386:23:3;16381:28;;16431:33;16426:2;:38;16419:45;;;;16518:10;16505:23;;16511:2;16506;:7;16505:23;52:12:-1;49:1;45:20;29:14;25:41;7:59;;16505:23:3;16500:28;;16550:33;16545:2;:38;16538:45;;;;16637:10;16624:23;;16630:2;16625;:7;16624:23;52:12:-1;49:1;45:20;29:14;25:41;7:59;;16624:23:3;16619:28;;16669:33;16664:2;:38;16657:45;;;;16756:10;16743:23;;16749:2;16744;:7;16743:23;52:12:-1;49:1;45:20;29:14;25:41;7:59;;16743:23:3;16738:28;;16788:33;16783:2;:38;16776:45;;;;16875:10;16862:23;;16868:2;16863;:7;16862:23;52:12:-1;49:1;45:20;29:14;25:41;7:59;;16862:23:3;16857:28;;16907:33;16902:2;:38;16895:45;;;;16994:10;16981:23;;16987:2;16982;:7;16981:23;52:12:-1;49:1;45:20;29:14;25:41;7:59;;16981:23:3;16976:28;;17026:33;17021:2;:38;17014:45;;;;17113:10;17100:23;;17106:2;17101;:7;17100:23;52:12:-1;49:1;45:20;29:14;25:41;7:59;;17100:23:3;17095:28;;17145:33;17140:2;:38;17133:45;;;;17232:10;17219:23;;17225:2;17220;:7;17219:23;52:12:-1;49:1;45:20;29:14;25:41;7:59;;17219:23:3;17214:28;;17264:33;17259:2;:38;17252:45;;;;17351:10;17338:23;;17344:2;17339;:7;17338:23;52:12:-1;49:1;45:20;29:14;25:41;7:59;;17338:23:3;17333:28;;17383:33;17378:2;:38;17371:45;;;;17470:10;17457:23;;17463:2;17458;:7;17457:23;52:12:-1;49:1;45:20;29:14;25:41;7:59;;17457:23:3;17452:28;;17502:33;17497:2;:38;17490:45;;;;17589:10;17576:23;;17582:2;17577;:7;17576:23;52:12:-1;49:1;45:20;29:14;25:41;7:59;;17576:23:3;17571:28;;17621:33;17616:2;:38;17609:45;;;;17708:10;17695:23;;17701:2;17696;:7;17695:23;52:12:-1;49:1;45:20;29:14;25:41;7:59;;17695:23:3;17690:28;;17740:33;17735:2;:38;17728:45;;;;17827:10;17814:23;;17820:2;17815;:7;17814:23;52:12:-1;49:1;45:20;29:14;25:41;7:59;;17814:23:3;17809:28;;17859:33;17854:2;:38;17847:45;;;;17946:10;17933:23;;17939:2;17934;:7;17933:23;52:12:-1;49:1;45:20;29:14;25:41;7:59;;17933:23:3;17928:28;;17978:33;17973:2;:38;17966:45;;;;18065:10;18052:23;;18058:2;18053;:7;18052:23;52:12:-1;49:1;45:20;29:14;25:41;7:59;;18052:23:3;18047:28;;18097:33;18092:2;:38;18085:45;;;;18184:10;18171:23;;18177:2;18172;:7;18171:23;52:12:-1;49:1;45:20;29:14;25:41;7:59;;18171:23:3;18166:28;;18216:33;18211:2;:38;18204:45;;;;18303:10;18290:23;;18296:2;18291;:7;18290:23;52:12:-1;49:1;45:20;29:14;25:41;7:59;;18290:23:3;18285:28;;18335:33;18330:2;:38;18323:45;;;;18422:10;18409:23;;18415:2;18410;:7;18409:23;52:12:-1;49:1;45:20;29:14;25:41;7:59;;18409:23:3;18404:28;;18454:33;18449:2;:38;18442:45;;;;18541:10;18528:23;;18534:2;18529;:7;18528:23;52:12:-1;49:1;45:20;29:14;25:41;7:59;;18528:23:3;18523:28;;18573:33;18568:2;:38;18561:45;;;;18660:10;18647:23;;18653:2;18648;:7;18647:23;52:12:-1;49:1;45:20;29:14;25:41;7:59;;18647:23:3;18642:28;;18692:33;18687:2;:38;18680:45;;;;18779:10;18766:23;;18772:2;18767;:7;18766:23;52:12:-1;49:1;45:20;29:14;25:41;7:59;;18766:23:3;18761:28;;18811:33;18806:2;:38;18799:45;;;;18898:10;18885:23;;18891:2;18886;:7;18885:23;52:12:-1;49:1;45:20;29:14;25:41;7:59;;18885:23:3;18880:28;;18930:33;18925:2;:38;18918:45;;;;19017:10;19004:23;;19010:2;19005;:7;19004:23;52:12:-1;49:1;45:20;29:14;25:41;7:59;;19004:23:3;18999:28;;19049:33;19044:2;:38;19037:45;;;;19136:10;19123:23;;19129:2;19124;:7;19123:23;52:12:-1;49:1;45:20;29:14;25:41;7:59;;19123:23:3;19118:28;;19168:33;19163:2;:38;19156:45;;;;19255:10;19242:23;;19248:2;19243;:7;19242:23;52:12:-1;49:1;45:20;29:14;25:41;7:59;;19242:23:3;19237:28;;19287:33;19282:2;:38;19275:45;;;;19431:10;19424:17;;:3;;:17;;;;19418:2;19382:33;19376:3;:39;;;;;;;;:44;:66;19357:85;;;;15377:4122;;;;:::o;13443:532::-;13497:5;13514:9;13526:1;13514:13;;13537:9;13549:2;13537:14;;13570:3;13566:1;:7;13562:386;;;13625:80;13636:1;13632;:5;13625:80;;;13663:1;13657:7;;52:12:-1;49:1;45:20;29:14;25:41;7:59;;13657:7:3;;;13689:1;13682:8;;;;13625:80;;;13562:386;;;13776:7;13786:3;13776:13;;13771:167;13795:1;13791;:5;;;13771:167;;;13842:1;13835:8;;:3;;:8;;;;13829:1;:15;;13825:99;;;13874:1;13868:7;;;;52:12:-1;49:1;45:20;29:14;25:41;7:59;;13868:7:3;;;13904:1;13897:8;;;;13825:99;13804:1;13798:7;;;;52:12:-1;49:1;45:20;29:14;25:41;7:59;;13798:7:3;;;13771:167;;;;13562:386;13965:3;13958:10;;;;13443:532;;;:::o",
  "source": "pragma solidity ^0.5.0;\n\nimport \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\";\nimport \"openzeppelin-solidity/contracts/ownership/Ownable.sol\";\nimport \"openzeppelin-solidity/contracts/math/SafeMath.sol\";\n\nimport \"./Interface/IBondingCurve.sol\";\nimport \"./BancorFormula.sol\";\nimport \"./MaxGasPrice.sol\";\n\ncontract CurveBondedToken is IBondingCurve, BancorFormula, Ownable, ERC20 {\n    using SafeMath for uint256;\n\n    // Use the same decimal places as ether.\n    uint256 public scale = 10**18;\n    uint256 public poolBalance = 1 * scale;\n    uint256 public reserveRatio;\n\n    constructor(uint256 _reserveRatio) public {\n        reserveRatio = _reserveRatio;\n        _mint(msg.sender, 1 * scale);\n    }\n\n    function calculateCurvedMintReturn(uint256 _amount)\n        public\n        view\n        returns (uint256 mintAmount)\n    {\n        return\n            calculatePurchaseReturn(\n                totalSupply(),\n                poolBalance,\n                uint32(reserveRatio),\n                _amount\n            );\n    }\n\n    function calculateCurvedBurnReturn(uint256 _amount)\n        public\n        view\n        returns (uint256 burnAmount)\n    {\n        return\n            calculateSaleReturn(\n                totalSupply(),\n                poolBalance,\n                uint32(reserveRatio),\n                _amount\n            );\n    }\n\n    modifier validMint(uint256 _amount) {\n        require(_amount > 0, \"Amount must be non-zero!\");\n        _;\n    }\n\n    modifier validBurn(uint256 _amount) {\n        require(_amount > 0, \"Amount must be non-zero!\");\n        require(\n            balanceOf(msg.sender) >= _amount,\n            \"Sender does not have enough tokens to burn.\"\n        );\n        _;\n    }\n\n    function _curvedMint(uint256 _deposit)\n        internal\n        validMint(_deposit)\n        returns (uint256)\n    {\n        uint256 amount = calculateCurvedMintReturn(_deposit);\n        _mint(msg.sender, amount);\n        poolBalance = poolBalance.add(_deposit);\n        emit CurvedMint(msg.sender, amount, _deposit);\n        return amount;\n    }\n\n    function _curvedBurn(uint256 _amount)\n        internal\n        validBurn(_amount)\n        returns (uint256)\n    {\n        uint256 reimbursement = calculateCurvedBurnReturn(_amount);\n        poolBalance = poolBalance.sub(reimbursement);\n        _burn(msg.sender, _amount);\n        emit CurvedBurn(msg.sender, _amount, reimbursement);\n        return reimbursement;\n    }\n}\n",
  "sourcePath": "/Users/michaeljcohen/Desktop/projects/micronews/contracts/CurveBondedToken.sol",
  "ast": {
    "absolutePath": "/Users/michaeljcohen/Desktop/projects/micronews/contracts/CurveBondedToken.sol",
    "exportedSymbols": {
      "CurveBondedToken": [
        411
      ]
    },
    "id": 412,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 213,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "id": 214,
        "nodeType": "ImportDirective",
        "scope": 412,
        "sourceUnit": 4306,
        "src": "25:63:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 215,
        "nodeType": "ImportDirective",
        "scope": 412,
        "sourceUnit": 3909,
        "src": "89:63:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "file": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "id": 216,
        "nodeType": "ImportDirective",
        "scope": 412,
        "sourceUnit": 3798,
        "src": "153:59:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/michaeljcohen/Desktop/projects/micronews/contracts/Interface/IBondingCurve.sol",
        "file": "./Interface/IBondingCurve.sol",
        "id": 217,
        "nodeType": "ImportDirective",
        "scope": 412,
        "sourceUnit": 445,
        "src": "214:39:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/michaeljcohen/Desktop/projects/micronews/contracts/BancorFormula.sol",
        "file": "./BancorFormula.sol",
        "id": 218,
        "nodeType": "ImportDirective",
        "scope": 412,
        "sourceUnit": 212,
        "src": "254:29:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/michaeljcohen/Desktop/projects/micronews/contracts/MaxGasPrice.sol",
        "file": "./MaxGasPrice.sol",
        "id": 219,
        "nodeType": "ImportDirective",
        "scope": 412,
        "sourceUnit": 2715,
        "src": "284:27:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 220,
              "name": "IBondingCurve",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 444,
              "src": "342:13:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IBondingCurve_$444",
                "typeString": "contract IBondingCurve"
              }
            },
            "id": 221,
            "nodeType": "InheritanceSpecifier",
            "src": "342:13:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 222,
              "name": "BancorFormula",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 211,
              "src": "357:13:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BancorFormula_$211",
                "typeString": "contract BancorFormula"
              }
            },
            "id": 223,
            "nodeType": "InheritanceSpecifier",
            "src": "357:13:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 224,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3908,
              "src": "372:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$3908",
                "typeString": "contract Ownable"
              }
            },
            "id": 225,
            "nodeType": "InheritanceSpecifier",
            "src": "372:7:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 226,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4305,
              "src": "381:5:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$4305",
                "typeString": "contract ERC20"
              }
            },
            "id": 227,
            "nodeType": "InheritanceSpecifier",
            "src": "381:5:1"
          }
        ],
        "contractDependencies": [
          211,
          444,
          2673,
          3908,
          4305,
          4374
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 411,
        "linearizedBaseContracts": [
          411,
          4305,
          4374,
          3908,
          211,
          2673,
          444
        ],
        "name": "CurveBondedToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 230,
            "libraryName": {
              "contractScope": null,
              "id": 228,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3797,
              "src": "399:8:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$3797",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "393:27:1",
            "typeName": {
              "id": 229,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "412:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 235,
            "name": "scale",
            "nodeType": "VariableDeclaration",
            "scope": 411,
            "src": "471:29:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 231,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "471:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "commonType": {
                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000"
              },
              "id": 234,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "argumentTypes": null,
                "hexValue": "3130",
                "id": 232,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "494:2:1",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_10_by_1",
                  "typeString": "int_const 10"
                },
                "value": "10"
              },
              "nodeType": "BinaryOperation",
              "operator": "**",
              "rightExpression": {
                "argumentTypes": null,
                "hexValue": "3138",
                "id": 233,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "498:2:1",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_18_by_1",
                  "typeString": "int_const 18"
                },
                "value": "18"
              },
              "src": "494:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 240,
            "name": "poolBalance",
            "nodeType": "VariableDeclaration",
            "scope": 411,
            "src": "506:38:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 236,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "506:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "commonType": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "id": 239,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "lValueRequested": false,
              "leftExpression": {
                "argumentTypes": null,
                "hexValue": "31",
                "id": 237,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "535:1:1",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_1_by_1",
                  "typeString": "int_const 1"
                },
                "value": "1"
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "argumentTypes": null,
                "id": 238,
                "name": "scale",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 235,
                "src": "539:5:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "src": "535:9:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 242,
            "name": "reserveRatio",
            "nodeType": "VariableDeclaration",
            "scope": 411,
            "src": "550:27:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 241,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "550:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 259,
              "nodeType": "Block",
              "src": "626:83:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 249,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 247,
                      "name": "reserveRatio",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 242,
                      "src": "636:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 248,
                      "name": "_reserveRatio",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 244,
                      "src": "651:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "636:28:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 250,
                  "nodeType": "ExpressionStatement",
                  "src": "636:28:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 252,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4389,
                          "src": "680:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 253,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "680:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 256,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 254,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "692:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 255,
                          "name": "scale",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 235,
                          "src": "696:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "692:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 251,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4191,
                      "src": "674:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "674:28:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 258,
                  "nodeType": "ExpressionStatement",
                  "src": "674:28:1"
                }
              ]
            },
            "documentation": null,
            "id": 260,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 245,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 244,
                  "name": "_reserveRatio",
                  "nodeType": "VariableDeclaration",
                  "scope": 260,
                  "src": "596:21:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 243,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "596:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "595:23:1"
            },
            "returnParameters": {
              "id": 246,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "626:0:1"
            },
            "scope": 411,
            "src": "584:125:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 277,
              "nodeType": "Block",
              "src": "836:196:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 268,
                          "name": "totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3937,
                          "src": "906:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 269,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "906:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 270,
                        "name": "poolBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 240,
                        "src": "937:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 272,
                            "name": "reserveRatio",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 242,
                            "src": "973:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 271,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "966:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint32_$",
                            "typeString": "type(uint32)"
                          },
                          "typeName": "uint32"
                        },
                        "id": 273,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "966:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 274,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 262,
                        "src": "1004:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 267,
                      "name": "calculatePurchaseReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 103,
                      "src": "865:23:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint32_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint32,uint256) view returns (uint256)"
                      }
                    },
                    "id": 275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "865:160:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 266,
                  "id": 276,
                  "nodeType": "Return",
                  "src": "846:179:1"
                }
              ]
            },
            "documentation": null,
            "id": 278,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculateCurvedMintReturn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 263,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 262,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 278,
                  "src": "750:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 261,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "750:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "749:17:1"
            },
            "returnParameters": {
              "id": 266,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 265,
                  "name": "mintAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 278,
                  "src": "812:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 264,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "812:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "811:20:1"
            },
            "scope": 411,
            "src": "715:317:1",
            "stateMutability": "view",
            "superFunction": 436,
            "visibility": "public"
          },
          {
            "body": {
              "id": 295,
              "nodeType": "Block",
              "src": "1159:192:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 286,
                          "name": "totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3937,
                          "src": "1225:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 287,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1225:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 288,
                        "name": "poolBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 240,
                        "src": "1256:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 290,
                            "name": "reserveRatio",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 242,
                            "src": "1292:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 289,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1285:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint32_$",
                            "typeString": "type(uint32)"
                          },
                          "typeName": "uint32"
                        },
                        "id": 291,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1285:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 292,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 280,
                        "src": "1323:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 285,
                      "name": "calculateSaleReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 210,
                      "src": "1188:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint32_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint32,uint256) view returns (uint256)"
                      }
                    },
                    "id": 293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1188:156:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 284,
                  "id": 294,
                  "nodeType": "Return",
                  "src": "1169:175:1"
                }
              ]
            },
            "documentation": null,
            "id": 296,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculateCurvedBurnReturn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 281,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 280,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 296,
                  "src": "1073:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 279,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1073:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1072:17:1"
            },
            "returnParameters": {
              "id": 284,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 283,
                  "name": "burnAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 296,
                  "src": "1135:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 282,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1135:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1134:20:1"
            },
            "scope": 411,
            "src": "1038:313:1",
            "stateMutability": "view",
            "superFunction": 443,
            "visibility": "public"
          },
          {
            "body": {
              "id": 308,
              "nodeType": "Block",
              "src": "1393:76:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 303,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 301,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 298,
                          "src": "1411:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 302,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1421:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1411:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "416d6f756e74206d757374206265206e6f6e2d7a65726f21",
                        "id": 304,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1424:26:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cd9cb8b27fe4ae98fdc4882f0d0893814d51285b8bbbb8e45d5e89e37807428d",
                          "typeString": "literal_string \"Amount must be non-zero!\""
                        },
                        "value": "Amount must be non-zero!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cd9cb8b27fe4ae98fdc4882f0d0893814d51285b8bbbb8e45d5e89e37807428d",
                          "typeString": "literal_string \"Amount must be non-zero!\""
                        }
                      ],
                      "id": 300,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4392,
                        4393
                      ],
                      "referencedDeclaration": 4393,
                      "src": "1403:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 305,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1403:48:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 306,
                  "nodeType": "ExpressionStatement",
                  "src": "1403:48:1"
                },
                {
                  "id": 307,
                  "nodeType": "PlaceholderStatement",
                  "src": "1461:1:1"
                }
              ]
            },
            "documentation": null,
            "id": 309,
            "name": "validMint",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 299,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 298,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 309,
                  "src": "1376:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 297,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1376:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1375:17:1"
            },
            "src": "1357:112:1",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 331,
              "nodeType": "Block",
              "src": "1511:208:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 316,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 314,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 311,
                          "src": "1529:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 315,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1539:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1529:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "416d6f756e74206d757374206265206e6f6e2d7a65726f21",
                        "id": 317,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1542:26:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cd9cb8b27fe4ae98fdc4882f0d0893814d51285b8bbbb8e45d5e89e37807428d",
                          "typeString": "literal_string \"Amount must be non-zero!\""
                        },
                        "value": "Amount must be non-zero!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cd9cb8b27fe4ae98fdc4882f0d0893814d51285b8bbbb8e45d5e89e37807428d",
                          "typeString": "literal_string \"Amount must be non-zero!\""
                        }
                      ],
                      "id": 313,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4392,
                        4393
                      ],
                      "referencedDeclaration": 4393,
                      "src": "1521:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 318,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1521:48:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 319,
                  "nodeType": "ExpressionStatement",
                  "src": "1521:48:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 326,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 322,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4389,
                                "src": "1610:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 323,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1610:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 321,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3949,
                            "src": "1600:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 324,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1600:21:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 325,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 311,
                          "src": "1625:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1600:32:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "53656e64657220646f6573206e6f74206861766520656e6f75676820746f6b656e7320746f206275726e2e",
                        "id": 327,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1646:45:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_722ea867bbdbc2f87d02c32bb66e52303061a5c4ab6ce4f6fb031a2743def333",
                          "typeString": "literal_string \"Sender does not have enough tokens to burn.\""
                        },
                        "value": "Sender does not have enough tokens to burn."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_722ea867bbdbc2f87d02c32bb66e52303061a5c4ab6ce4f6fb031a2743def333",
                          "typeString": "literal_string \"Sender does not have enough tokens to burn.\""
                        }
                      ],
                      "id": 320,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4392,
                        4393
                      ],
                      "referencedDeclaration": 4393,
                      "src": "1579:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 328,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1579:122:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 329,
                  "nodeType": "ExpressionStatement",
                  "src": "1579:122:1"
                },
                {
                  "id": 330,
                  "nodeType": "PlaceholderStatement",
                  "src": "1711:1:1"
                }
              ]
            },
            "documentation": null,
            "id": 332,
            "name": "validBurn",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 312,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 311,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 332,
                  "src": "1494:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 310,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1494:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1493:17:1"
            },
            "src": "1475:244:1",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 370,
              "nodeType": "Block",
              "src": "1839:231:1",
              "statements": [
                {
                  "assignments": [
                    343
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 343,
                      "name": "amount",
                      "nodeType": "VariableDeclaration",
                      "scope": 370,
                      "src": "1849:14:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 342,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1849:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 347,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 345,
                        "name": "_deposit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 334,
                        "src": "1892:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 344,
                      "name": "calculateCurvedMintReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 278,
                      "src": "1866:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 346,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1866:35:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1849:52:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 349,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4389,
                          "src": "1917:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 350,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1917:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 351,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 343,
                        "src": "1929:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 348,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4191,
                      "src": "1911:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 352,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1911:25:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 353,
                  "nodeType": "ExpressionStatement",
                  "src": "1911:25:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 354,
                      "name": "poolBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 240,
                      "src": "1946:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 357,
                          "name": "_deposit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 334,
                          "src": "1976:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 355,
                          "name": "poolBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 240,
                          "src": "1960:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 356,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3691,
                        "src": "1960:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 358,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1960:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1946:39:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 360,
                  "nodeType": "ExpressionStatement",
                  "src": "1946:39:1"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 362,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4389,
                          "src": "2011:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 363,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2011:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 364,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 343,
                        "src": "2023:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 365,
                        "name": "_deposit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 334,
                        "src": "2031:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 361,
                      "name": "CurvedMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 421,
                      "src": "2000:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 366,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2000:40:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 367,
                  "nodeType": "EmitStatement",
                  "src": "1995:45:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 368,
                    "name": "amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 343,
                    "src": "2057:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 341,
                  "id": 369,
                  "nodeType": "Return",
                  "src": "2050:13:1"
                }
              ]
            },
            "documentation": null,
            "id": 371,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 337,
                    "name": "_deposit",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 334,
                    "src": "1799:8:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 338,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 336,
                  "name": "validMint",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 309,
                  "src": "1789:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1789:19:1"
              }
            ],
            "name": "_curvedMint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 335,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 334,
                  "name": "_deposit",
                  "nodeType": "VariableDeclaration",
                  "scope": 371,
                  "src": "1746:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 333,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1746:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1745:18:1"
            },
            "returnParameters": {
              "id": 341,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 340,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 371,
                  "src": "1826:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 339,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1826:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1825:9:1"
            },
            "scope": 411,
            "src": "1725:345:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 409,
              "nodeType": "Block",
              "src": "2188:256:1",
              "statements": [
                {
                  "assignments": [
                    382
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 382,
                      "name": "reimbursement",
                      "nodeType": "VariableDeclaration",
                      "scope": 409,
                      "src": "2198:21:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 381,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2198:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 386,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 384,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 373,
                        "src": "2248:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 383,
                      "name": "calculateCurvedBurnReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 296,
                      "src": "2222:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 385,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2222:34:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2198:58:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 392,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 387,
                      "name": "poolBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 240,
                      "src": "2266:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 390,
                          "name": "reimbursement",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 382,
                          "src": "2296:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 388,
                          "name": "poolBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 240,
                          "src": "2280:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 389,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3716,
                        "src": "2280:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 391,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2280:30:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2266:44:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 393,
                  "nodeType": "ExpressionStatement",
                  "src": "2266:44:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 395,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4389,
                          "src": "2326:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 396,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2326:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 397,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 373,
                        "src": "2338:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 394,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4234,
                      "src": "2320:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 398,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2320:26:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 399,
                  "nodeType": "ExpressionStatement",
                  "src": "2320:26:1"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 401,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4389,
                          "src": "2372:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 402,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2372:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 403,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 373,
                        "src": "2384:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 404,
                        "name": "reimbursement",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 382,
                        "src": "2393:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 400,
                      "name": "CurvedBurn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 429,
                      "src": "2361:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 405,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2361:46:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 406,
                  "nodeType": "EmitStatement",
                  "src": "2356:51:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 407,
                    "name": "reimbursement",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 382,
                    "src": "2424:13:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 380,
                  "id": 408,
                  "nodeType": "Return",
                  "src": "2417:20:1"
                }
              ]
            },
            "documentation": null,
            "id": 410,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 376,
                    "name": "_amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 373,
                    "src": "2149:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 377,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 375,
                  "name": "validBurn",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 332,
                  "src": "2139:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2139:18:1"
              }
            ],
            "name": "_curvedBurn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 374,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 373,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 410,
                  "src": "2097:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 372,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2097:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2096:17:1"
            },
            "returnParameters": {
              "id": 380,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 379,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 410,
                  "src": "2175:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 378,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2175:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2174:9:1"
            },
            "scope": 411,
            "src": "2076:368:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 412,
        "src": "313:2133:1"
      }
    ],
    "src": "0:2447:1"
  },
  "legacyAST": {
    "absolutePath": "/Users/michaeljcohen/Desktop/projects/micronews/contracts/CurveBondedToken.sol",
    "exportedSymbols": {
      "CurveBondedToken": [
        411
      ]
    },
    "id": 412,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 213,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "id": 214,
        "nodeType": "ImportDirective",
        "scope": 412,
        "sourceUnit": 4306,
        "src": "25:63:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 215,
        "nodeType": "ImportDirective",
        "scope": 412,
        "sourceUnit": 3909,
        "src": "89:63:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "file": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "id": 216,
        "nodeType": "ImportDirective",
        "scope": 412,
        "sourceUnit": 3798,
        "src": "153:59:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/michaeljcohen/Desktop/projects/micronews/contracts/Interface/IBondingCurve.sol",
        "file": "./Interface/IBondingCurve.sol",
        "id": 217,
        "nodeType": "ImportDirective",
        "scope": 412,
        "sourceUnit": 445,
        "src": "214:39:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/michaeljcohen/Desktop/projects/micronews/contracts/BancorFormula.sol",
        "file": "./BancorFormula.sol",
        "id": 218,
        "nodeType": "ImportDirective",
        "scope": 412,
        "sourceUnit": 212,
        "src": "254:29:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/michaeljcohen/Desktop/projects/micronews/contracts/MaxGasPrice.sol",
        "file": "./MaxGasPrice.sol",
        "id": 219,
        "nodeType": "ImportDirective",
        "scope": 412,
        "sourceUnit": 2715,
        "src": "284:27:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 220,
              "name": "IBondingCurve",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 444,
              "src": "342:13:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IBondingCurve_$444",
                "typeString": "contract IBondingCurve"
              }
            },
            "id": 221,
            "nodeType": "InheritanceSpecifier",
            "src": "342:13:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 222,
              "name": "BancorFormula",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 211,
              "src": "357:13:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BancorFormula_$211",
                "typeString": "contract BancorFormula"
              }
            },
            "id": 223,
            "nodeType": "InheritanceSpecifier",
            "src": "357:13:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 224,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3908,
              "src": "372:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$3908",
                "typeString": "contract Ownable"
              }
            },
            "id": 225,
            "nodeType": "InheritanceSpecifier",
            "src": "372:7:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 226,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4305,
              "src": "381:5:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$4305",
                "typeString": "contract ERC20"
              }
            },
            "id": 227,
            "nodeType": "InheritanceSpecifier",
            "src": "381:5:1"
          }
        ],
        "contractDependencies": [
          211,
          444,
          2673,
          3908,
          4305,
          4374
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 411,
        "linearizedBaseContracts": [
          411,
          4305,
          4374,
          3908,
          211,
          2673,
          444
        ],
        "name": "CurveBondedToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 230,
            "libraryName": {
              "contractScope": null,
              "id": 228,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3797,
              "src": "399:8:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$3797",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "393:27:1",
            "typeName": {
              "id": 229,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "412:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 235,
            "name": "scale",
            "nodeType": "VariableDeclaration",
            "scope": 411,
            "src": "471:29:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 231,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "471:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "commonType": {
                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000"
              },
              "id": 234,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "argumentTypes": null,
                "hexValue": "3130",
                "id": 232,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "494:2:1",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_10_by_1",
                  "typeString": "int_const 10"
                },
                "value": "10"
              },
              "nodeType": "BinaryOperation",
              "operator": "**",
              "rightExpression": {
                "argumentTypes": null,
                "hexValue": "3138",
                "id": 233,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "498:2:1",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_18_by_1",
                  "typeString": "int_const 18"
                },
                "value": "18"
              },
              "src": "494:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 240,
            "name": "poolBalance",
            "nodeType": "VariableDeclaration",
            "scope": 411,
            "src": "506:38:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 236,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "506:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "commonType": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "id": 239,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "lValueRequested": false,
              "leftExpression": {
                "argumentTypes": null,
                "hexValue": "31",
                "id": 237,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "535:1:1",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_1_by_1",
                  "typeString": "int_const 1"
                },
                "value": "1"
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "argumentTypes": null,
                "id": 238,
                "name": "scale",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 235,
                "src": "539:5:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "src": "535:9:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 242,
            "name": "reserveRatio",
            "nodeType": "VariableDeclaration",
            "scope": 411,
            "src": "550:27:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 241,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "550:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 259,
              "nodeType": "Block",
              "src": "626:83:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 249,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 247,
                      "name": "reserveRatio",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 242,
                      "src": "636:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 248,
                      "name": "_reserveRatio",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 244,
                      "src": "651:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "636:28:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 250,
                  "nodeType": "ExpressionStatement",
                  "src": "636:28:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 252,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4389,
                          "src": "680:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 253,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "680:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 256,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 254,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "692:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 255,
                          "name": "scale",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 235,
                          "src": "696:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "692:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 251,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4191,
                      "src": "674:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "674:28:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 258,
                  "nodeType": "ExpressionStatement",
                  "src": "674:28:1"
                }
              ]
            },
            "documentation": null,
            "id": 260,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 245,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 244,
                  "name": "_reserveRatio",
                  "nodeType": "VariableDeclaration",
                  "scope": 260,
                  "src": "596:21:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 243,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "596:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "595:23:1"
            },
            "returnParameters": {
              "id": 246,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "626:0:1"
            },
            "scope": 411,
            "src": "584:125:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 277,
              "nodeType": "Block",
              "src": "836:196:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 268,
                          "name": "totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3937,
                          "src": "906:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 269,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "906:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 270,
                        "name": "poolBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 240,
                        "src": "937:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 272,
                            "name": "reserveRatio",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 242,
                            "src": "973:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 271,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "966:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint32_$",
                            "typeString": "type(uint32)"
                          },
                          "typeName": "uint32"
                        },
                        "id": 273,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "966:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 274,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 262,
                        "src": "1004:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 267,
                      "name": "calculatePurchaseReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 103,
                      "src": "865:23:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint32_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint32,uint256) view returns (uint256)"
                      }
                    },
                    "id": 275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "865:160:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 266,
                  "id": 276,
                  "nodeType": "Return",
                  "src": "846:179:1"
                }
              ]
            },
            "documentation": null,
            "id": 278,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculateCurvedMintReturn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 263,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 262,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 278,
                  "src": "750:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 261,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "750:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "749:17:1"
            },
            "returnParameters": {
              "id": 266,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 265,
                  "name": "mintAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 278,
                  "src": "812:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 264,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "812:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "811:20:1"
            },
            "scope": 411,
            "src": "715:317:1",
            "stateMutability": "view",
            "superFunction": 436,
            "visibility": "public"
          },
          {
            "body": {
              "id": 295,
              "nodeType": "Block",
              "src": "1159:192:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 286,
                          "name": "totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3937,
                          "src": "1225:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 287,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1225:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 288,
                        "name": "poolBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 240,
                        "src": "1256:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 290,
                            "name": "reserveRatio",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 242,
                            "src": "1292:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 289,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1285:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint32_$",
                            "typeString": "type(uint32)"
                          },
                          "typeName": "uint32"
                        },
                        "id": 291,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1285:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 292,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 280,
                        "src": "1323:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 285,
                      "name": "calculateSaleReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 210,
                      "src": "1188:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint32_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint32,uint256) view returns (uint256)"
                      }
                    },
                    "id": 293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1188:156:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 284,
                  "id": 294,
                  "nodeType": "Return",
                  "src": "1169:175:1"
                }
              ]
            },
            "documentation": null,
            "id": 296,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculateCurvedBurnReturn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 281,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 280,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 296,
                  "src": "1073:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 279,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1073:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1072:17:1"
            },
            "returnParameters": {
              "id": 284,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 283,
                  "name": "burnAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 296,
                  "src": "1135:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 282,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1135:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1134:20:1"
            },
            "scope": 411,
            "src": "1038:313:1",
            "stateMutability": "view",
            "superFunction": 443,
            "visibility": "public"
          },
          {
            "body": {
              "id": 308,
              "nodeType": "Block",
              "src": "1393:76:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 303,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 301,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 298,
                          "src": "1411:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 302,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1421:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1411:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "416d6f756e74206d757374206265206e6f6e2d7a65726f21",
                        "id": 304,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1424:26:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cd9cb8b27fe4ae98fdc4882f0d0893814d51285b8bbbb8e45d5e89e37807428d",
                          "typeString": "literal_string \"Amount must be non-zero!\""
                        },
                        "value": "Amount must be non-zero!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cd9cb8b27fe4ae98fdc4882f0d0893814d51285b8bbbb8e45d5e89e37807428d",
                          "typeString": "literal_string \"Amount must be non-zero!\""
                        }
                      ],
                      "id": 300,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4392,
                        4393
                      ],
                      "referencedDeclaration": 4393,
                      "src": "1403:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 305,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1403:48:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 306,
                  "nodeType": "ExpressionStatement",
                  "src": "1403:48:1"
                },
                {
                  "id": 307,
                  "nodeType": "PlaceholderStatement",
                  "src": "1461:1:1"
                }
              ]
            },
            "documentation": null,
            "id": 309,
            "name": "validMint",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 299,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 298,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 309,
                  "src": "1376:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 297,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1376:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1375:17:1"
            },
            "src": "1357:112:1",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 331,
              "nodeType": "Block",
              "src": "1511:208:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 316,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 314,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 311,
                          "src": "1529:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 315,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1539:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1529:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "416d6f756e74206d757374206265206e6f6e2d7a65726f21",
                        "id": 317,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1542:26:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cd9cb8b27fe4ae98fdc4882f0d0893814d51285b8bbbb8e45d5e89e37807428d",
                          "typeString": "literal_string \"Amount must be non-zero!\""
                        },
                        "value": "Amount must be non-zero!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cd9cb8b27fe4ae98fdc4882f0d0893814d51285b8bbbb8e45d5e89e37807428d",
                          "typeString": "literal_string \"Amount must be non-zero!\""
                        }
                      ],
                      "id": 313,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4392,
                        4393
                      ],
                      "referencedDeclaration": 4393,
                      "src": "1521:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 318,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1521:48:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 319,
                  "nodeType": "ExpressionStatement",
                  "src": "1521:48:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 326,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 322,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4389,
                                "src": "1610:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 323,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1610:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 321,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3949,
                            "src": "1600:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 324,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1600:21:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 325,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 311,
                          "src": "1625:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1600:32:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "53656e64657220646f6573206e6f74206861766520656e6f75676820746f6b656e7320746f206275726e2e",
                        "id": 327,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1646:45:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_722ea867bbdbc2f87d02c32bb66e52303061a5c4ab6ce4f6fb031a2743def333",
                          "typeString": "literal_string \"Sender does not have enough tokens to burn.\""
                        },
                        "value": "Sender does not have enough tokens to burn."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_722ea867bbdbc2f87d02c32bb66e52303061a5c4ab6ce4f6fb031a2743def333",
                          "typeString": "literal_string \"Sender does not have enough tokens to burn.\""
                        }
                      ],
                      "id": 320,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4392,
                        4393
                      ],
                      "referencedDeclaration": 4393,
                      "src": "1579:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 328,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1579:122:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 329,
                  "nodeType": "ExpressionStatement",
                  "src": "1579:122:1"
                },
                {
                  "id": 330,
                  "nodeType": "PlaceholderStatement",
                  "src": "1711:1:1"
                }
              ]
            },
            "documentation": null,
            "id": 332,
            "name": "validBurn",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 312,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 311,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 332,
                  "src": "1494:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 310,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1494:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1493:17:1"
            },
            "src": "1475:244:1",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 370,
              "nodeType": "Block",
              "src": "1839:231:1",
              "statements": [
                {
                  "assignments": [
                    343
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 343,
                      "name": "amount",
                      "nodeType": "VariableDeclaration",
                      "scope": 370,
                      "src": "1849:14:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 342,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1849:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 347,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 345,
                        "name": "_deposit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 334,
                        "src": "1892:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 344,
                      "name": "calculateCurvedMintReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 278,
                      "src": "1866:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 346,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1866:35:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1849:52:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 349,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4389,
                          "src": "1917:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 350,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1917:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 351,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 343,
                        "src": "1929:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 348,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4191,
                      "src": "1911:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 352,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1911:25:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 353,
                  "nodeType": "ExpressionStatement",
                  "src": "1911:25:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 354,
                      "name": "poolBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 240,
                      "src": "1946:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 357,
                          "name": "_deposit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 334,
                          "src": "1976:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 355,
                          "name": "poolBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 240,
                          "src": "1960:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 356,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3691,
                        "src": "1960:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 358,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1960:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1946:39:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 360,
                  "nodeType": "ExpressionStatement",
                  "src": "1946:39:1"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 362,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4389,
                          "src": "2011:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 363,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2011:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 364,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 343,
                        "src": "2023:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 365,
                        "name": "_deposit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 334,
                        "src": "2031:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 361,
                      "name": "CurvedMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 421,
                      "src": "2000:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 366,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2000:40:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 367,
                  "nodeType": "EmitStatement",
                  "src": "1995:45:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 368,
                    "name": "amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 343,
                    "src": "2057:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 341,
                  "id": 369,
                  "nodeType": "Return",
                  "src": "2050:13:1"
                }
              ]
            },
            "documentation": null,
            "id": 371,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 337,
                    "name": "_deposit",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 334,
                    "src": "1799:8:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 338,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 336,
                  "name": "validMint",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 309,
                  "src": "1789:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1789:19:1"
              }
            ],
            "name": "_curvedMint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 335,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 334,
                  "name": "_deposit",
                  "nodeType": "VariableDeclaration",
                  "scope": 371,
                  "src": "1746:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 333,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1746:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1745:18:1"
            },
            "returnParameters": {
              "id": 341,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 340,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 371,
                  "src": "1826:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 339,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1826:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1825:9:1"
            },
            "scope": 411,
            "src": "1725:345:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 409,
              "nodeType": "Block",
              "src": "2188:256:1",
              "statements": [
                {
                  "assignments": [
                    382
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 382,
                      "name": "reimbursement",
                      "nodeType": "VariableDeclaration",
                      "scope": 409,
                      "src": "2198:21:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 381,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2198:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 386,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 384,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 373,
                        "src": "2248:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 383,
                      "name": "calculateCurvedBurnReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 296,
                      "src": "2222:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 385,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2222:34:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2198:58:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 392,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 387,
                      "name": "poolBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 240,
                      "src": "2266:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 390,
                          "name": "reimbursement",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 382,
                          "src": "2296:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 388,
                          "name": "poolBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 240,
                          "src": "2280:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 389,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3716,
                        "src": "2280:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 391,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2280:30:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2266:44:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 393,
                  "nodeType": "ExpressionStatement",
                  "src": "2266:44:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 395,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4389,
                          "src": "2326:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 396,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2326:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 397,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 373,
                        "src": "2338:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 394,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4234,
                      "src": "2320:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 398,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2320:26:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 399,
                  "nodeType": "ExpressionStatement",
                  "src": "2320:26:1"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 401,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4389,
                          "src": "2372:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 402,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2372:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 403,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 373,
                        "src": "2384:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 404,
                        "name": "reimbursement",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 382,
                        "src": "2393:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 400,
                      "name": "CurvedBurn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 429,
                      "src": "2361:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 405,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2361:46:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 406,
                  "nodeType": "EmitStatement",
                  "src": "2356:51:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 407,
                    "name": "reimbursement",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 382,
                    "src": "2424:13:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 380,
                  "id": 408,
                  "nodeType": "Return",
                  "src": "2417:20:1"
                }
              ]
            },
            "documentation": null,
            "id": 410,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 376,
                    "name": "_amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 373,
                    "src": "2149:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 377,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 375,
                  "name": "validBurn",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 332,
                  "src": "2139:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2139:18:1"
              }
            ],
            "name": "_curvedBurn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 374,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 373,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 410,
                  "src": "2097:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 372,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2097:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2096:17:1"
            },
            "returnParameters": {
              "id": 380,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 379,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 410,
                  "src": "2175:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 378,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2175:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2174:9:1"
            },
            "scope": 411,
            "src": "2076:368:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 412,
        "src": "313:2133:1"
      }
    ],
    "src": "0:2447:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.2",
  "updatedAt": "2019-09-30T20:29:06.881Z",
  "devdoc": {
    "methods": {
      "allowance(address,address)": {
        "details": "See `IERC20.allowance`."
      },
      "approve(address,uint256)": {
        "details": "See `IERC20.approve`.     * Requirements:     * - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See `IERC20.balanceOf`."
      },
      "calculatePurchaseReturn(uint256,uint256,uint32,uint256)": {
        "details": "given a token supply, connector balance, weight and a deposit amount (in the connector token), calculates the return for a given conversion (in the main token)   * Formula: Return = _supply * ((1 + _depositAmount / _connectorBalance) ^ (_connectorWeight / 1000000) - 1)",
        "params": {
          "_connectorBalance": "total connector balance",
          "_connectorWeight": "connector weight, represented in ppm, 1-1000000",
          "_depositAmount": "deposit amount, in connector token",
          "_supply": "token total supply"
        },
        "return": "purchase return amount"
      },
      "calculateSaleReturn(uint256,uint256,uint32,uint256)": {
        "details": "given a token supply, connector balance, weight and a sell amount (in the main token), calculates the return for a given conversion (in the connector token)   * Formula: Return = _connectorBalance * (1 - (1 - _sellAmount / _supply) ^ (1 / (_connectorWeight / 1000000)))",
        "params": {
          "_connectorBalance": "total connector",
          "_connectorWeight": "constant connector Weight, represented in ppm, 1-1000000",
          "_sellAmount": "sell amount, in the token itself",
          "_supply": "token total supply"
        },
        "return": "sale return amount"
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`.     * Emits an `Approval` event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`.     * Emits an `Approval` event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address."
      },
      "isOwner()": {
        "details": "Returns true if the caller is the current owner."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * > Note: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "totalSupply()": {
        "details": "See `IERC20.totalSupply`."
      },
      "transfer(address,uint256)": {
        "details": "See `IERC20.transfer`.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See `IERC20.transferFrom`.     * Emits an `Approval` event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of `ERC20`;     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `value`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}